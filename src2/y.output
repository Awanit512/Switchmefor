Terminals unused in grammar

   point_const
   ELSE


Rules useless in parser due to conflicts

   86 M: %empty


State 123 conflicts: 1 shift/reduce


Grammar

    0 $accept: program_unit $end

    1 program_unit: HEADER program_unit
    2             | DEFINE primary_exp program_unit
    3             | translation_unit

    4 translation_unit: external_decl
    5                 | translation_unit external_decl

    6 external_decl: function_definition
    7              | decl

    8 function_definition: decl_specs declarator decl_list compound_stat
    9                    | declarator decl_list compound_stat
   10                    | decl_specs declarator compound_stat
   11                    | declarator compound_stat

   12 decl: decl_specs init_declarator_list ';'
   13     | decl_specs ';'

   14 decl_list: decl
   15          | decl_list decl

   16 decl_specs: type_spec decl_specs
   17           | type_spec

   18 type_spec: type_const

   19 init_declarator_list: init_declarator
   20                     | init_declarator_list ',' init_declarator

   21 init_declarator: declarator
   22                | declarator '=' initializer

   23 declarator: direct_declarator

   24 direct_declarator: id
   25                  | '(' declarator ')'
   26                  | direct_declarator '[' const_exp ']'
   27                  | direct_declarator '[' ']'
   28                  | direct_declarator '(' param_type_list ')'
   29                  | direct_declarator '(' id_list ')'
   30                  | direct_declarator '(' ')'

   31 param_type_list: param_list
   32                | param_list ',' param_const

   33 param_list: param_decl
   34           | param_list ','

   35 param_decl: decl_specs declarator
   36           | decl_specs abstract_declarator
   37           | decl_specs

   38 id_list: id
   39        | id_list ',' id

   40 initializer: assignment_exp
   41            | '{' initializer_list '}'
   42            | '{' initializer_list ',' '}'

   43 initializer_list: initializer
   44                 | initializer_list ',' initializer

   45 abstract_declarator: direct_abstract_declarator

   46 direct_abstract_declarator: '(' abstract_declarator ')'
   47                           | direct_abstract_declarator '[' const_exp ']'
   48                           | '[' const_exp ']'
   49                           | direct_abstract_declarator '[' ']'
   50                           | '[' ']'
   51                           | direct_abstract_declarator '(' param_type_list ')'
   52                           | '(' param_type_list ')'
   53                           | direct_abstract_declarator '(' ')'
   54                           | '(' ')'

   55 stat: labeled_stat
   56     | exp_stat
   57     | compound_stat
   58     | selection_stat
   59     | iteration_stat
   60     | jump_stat

   61 labeled_stat: id ':' stat
   62             | CASE const_exp ':' stat
   63             | DEFAULT ':' stat

   64 exp_stat: exp ';'
   65         | ';'

   66 compound_stat: '{' decl_list stat_list '}'
   67              | '{' stat_list '}'
   68              | '{' decl_list '}'
   69              | '{' '}'

   70 stat_list: stat
   71          | stat_list stat

   72 $@1: %empty

   73 selection_stat: SWITCH '(' exp ')' $@1 stat

   74 iteration_stat: FOR '(' exp ';' exp ';' exp ')' stat
   75               | FOR '(' exp ';' exp ';' ')' stat
   76               | FOR '(' exp ';' ';' exp ')' stat

   77 $@2: %empty

   78 iteration_stat: FOR '(' exp ';' ';' ')' $@2 stat
   79               | FOR '(' M ';' exp ';' exp ')' stat

   80 $@3: %empty

   81 iteration_stat: FOR '(' ';' exp ';' ')' $@3 stat

   82 $@4: %empty

   83 iteration_stat: FOR '(' ';' ';' $@4 exp ')' stat

   84 $@5: %empty

   85 iteration_stat: FOR '(' ';' ';' ')' $@5 stat

   86 M: %empty

   87 jump_stat: CONTINUE ';'
   88          | BREAK ';'
   89          | RETURN exp ';'
   90          | RETURN ';'

   91 exp: assignment_exp
   92    | exp ',' assignment_exp

   93 assignment_exp: conditional_exp

   94 $@6: %empty

   95 $@7: %empty

   96 assignment_exp: unary_exp $@6 '=' $@7 conditional_exp

   97 conditional_exp: logical_or_exp

   98 const_exp: conditional_exp

   99 logical_or_exp: logical_and_exp

  100 $@8: %empty

  101 logical_or_exp: logical_or_exp or_const $@8 logical_and_exp

  102 logical_and_exp: inclusive_or_exp

  103 $@9: %empty

  104 logical_and_exp: logical_and_exp and_const $@9 inclusive_or_exp

  105 inclusive_or_exp: exclusive_or_exp

  106 $@10: %empty

  107 inclusive_or_exp: inclusive_or_exp '|' $@10 exclusive_or_exp

  108 exclusive_or_exp: and_exp

  109 $@11: %empty

  110 exclusive_or_exp: exclusive_or_exp '^' $@11 and_exp

  111 and_exp: equality_exp

  112 $@12: %empty

  113 and_exp: and_exp '&' $@12 equality_exp

  114 equality_exp: relational_exp

  115 $@13: %empty

  116 equality_exp: equality_exp eq_const $@13 relational_exp

  117 relational_exp: additive_exp

  118 $@14: %empty

  119 relational_exp: relational_exp '<' $@14 additive_exp

  120 $@15: %empty

  121 relational_exp: relational_exp '>' $@15 additive_exp

  122 $@16: %empty

  123 relational_exp: relational_exp rel_const $@16 additive_exp

  124 additive_exp: mult_exp

  125 $@17: %empty

  126 additive_exp: additive_exp '+' $@17 mult_exp

  127 $@18: %empty

  128 additive_exp: additive_exp '-' $@18 mult_exp

  129 mult_exp: unary_exp

  130 $@19: %empty

  131 mult_exp: mult_exp '*' $@19 unary_exp

  132 $@20: %empty

  133 mult_exp: mult_exp '/' $@20 unary_exp

  134 $@21: %empty

  135 mult_exp: mult_exp '%' $@21 unary_exp

  136 unary_exp: postfix_exp
  137          | inc_const unary_exp

  138 postfix_exp: primary_exp
  139            | postfix_exp '[' exp ']'
  140            | postfix_exp '(' argument_exp_list ')'
  141            | postfix_exp '(' ')'
  142            | postfix_exp inc_const

  143 primary_exp: id
  144            | consts
  145            | string
  146            | '(' exp ')'

  147 argument_exp_list: assignment_exp
  148                  | argument_exp_list ',' assignment_exp

  149 consts: int_const
  150       | char_const
  151       | float_const


Terminals, with rules where they appear

$end (0) 0
'%' (37) 135
'&' (38) 113
'(' (40) 25 28 29 30 46 51 52 53 54 73 74 75 76 78 79 81 83 85 140
    141 146
')' (41) 25 28 29 30 46 51 52 53 54 73 74 75 76 78 79 81 83 85 140
    141 146
'*' (42) 131
'+' (43) 126
',' (44) 20 32 34 39 42 44 92 148
'-' (45) 128
'/' (47) 133
':' (58) 61 62 63
';' (59) 12 13 64 65 74 75 76 78 79 81 83 85 87 88 89 90
'<' (60) 119
'=' (61) 22 96
'>' (62) 121
'[' (91) 26 27 47 48 49 50 139
']' (93) 26 27 47 48 49 50 139
'^' (94) 110
'{' (123) 41 42 66 67 68 69
'|' (124) 107
'}' (125) 41 42 66 67 68 69
error (256)
char_const (258) 150
id (259) 24 38 39 61 143
string (260) 145
type_const (261) 18
DEFINE (262) 2
int_const (263) 149
float_const (264) 151
FOR (265) 74 75 76 78 79 81 83 85
BREAK (266) 88
SWITCH (267) 73
CONTINUE (268) 87
RETURN (269) 89 90
CASE (270) 62
DEFAULT (271) 63
or_const (272) 101
and_const (273) 104
eq_const (274) 116
rel_const (275) 123
inc_const (276) 137 142
point_const (277)
param_const (278) 32
ELSE (279)
HEADER (280) 1


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
program_unit (47)
    on left: 1 2 3, on right: 0 1 2
translation_unit (48)
    on left: 4 5, on right: 3 5
external_decl (49)
    on left: 6 7, on right: 4 5
function_definition (50)
    on left: 8 9 10 11, on right: 6
decl (51)
    on left: 12 13, on right: 7 14 15
decl_list (52)
    on left: 14 15, on right: 8 9 15 66 68
decl_specs (53)
    on left: 16 17, on right: 8 10 12 13 16 35 36 37
type_spec (54)
    on left: 18, on right: 16 17
init_declarator_list (55)
    on left: 19 20, on right: 12 20
init_declarator (56)
    on left: 21 22, on right: 19 20
declarator (57)
    on left: 23, on right: 8 9 10 11 21 22 25 35
direct_declarator (58)
    on left: 24 25 26 27 28 29 30, on right: 23 26 27 28 29 30
param_type_list (59)
    on left: 31 32, on right: 28 51 52
param_list (60)
    on left: 33 34, on right: 31 32 34
param_decl (61)
    on left: 35 36 37, on right: 33
id_list (62)
    on left: 38 39, on right: 29 39
initializer (63)
    on left: 40 41 42, on right: 22 43 44
initializer_list (64)
    on left: 43 44, on right: 41 42 44
abstract_declarator (65)
    on left: 45, on right: 36 46
direct_abstract_declarator (66)
    on left: 46 47 48 49 50 51 52 53 54, on right: 45 47 49 51 53
stat (67)
    on left: 55 56 57 58 59 60, on right: 61 62 63 70 71 73 74 75 76
    78 79 81 83 85
labeled_stat (68)
    on left: 61 62 63, on right: 55
exp_stat (69)
    on left: 64 65, on right: 56
compound_stat (70)
    on left: 66 67 68 69, on right: 8 9 10 11 57
stat_list (71)
    on left: 70 71, on right: 66 67 71
selection_stat (72)
    on left: 73, on right: 58
$@1 (73)
    on left: 72, on right: 73
iteration_stat (74)
    on left: 74 75 76 78 79 81 83 85, on right: 59
$@2 (75)
    on left: 77, on right: 78
$@3 (76)
    on left: 80, on right: 81
$@4 (77)
    on left: 82, on right: 83
$@5 (78)
    on left: 84, on right: 85
M (79)
    on left: 86, on right: 79
jump_stat (80)
    on left: 87 88 89 90, on right: 60
exp (81)
    on left: 91 92, on right: 64 73 74 75 76 78 79 81 83 89 92 139
    146
assignment_exp (82)
    on left: 93 96, on right: 40 91 92 147 148
$@6 (83)
    on left: 94, on right: 96
$@7 (84)
    on left: 95, on right: 96
conditional_exp (85)
    on left: 97, on right: 93 96 98
const_exp (86)
    on left: 98, on right: 26 47 48 62
logical_or_exp (87)
    on left: 99 101, on right: 97 101
$@8 (88)
    on left: 100, on right: 101
logical_and_exp (89)
    on left: 102 104, on right: 99 101 104
$@9 (90)
    on left: 103, on right: 104
inclusive_or_exp (91)
    on left: 105 107, on right: 102 104 107
$@10 (92)
    on left: 106, on right: 107
exclusive_or_exp (93)
    on left: 108 110, on right: 105 107 110
$@11 (94)
    on left: 109, on right: 110
and_exp (95)
    on left: 111 113, on right: 108 110 113
$@12 (96)
    on left: 112, on right: 113
equality_exp (97)
    on left: 114 116, on right: 111 113 116
$@13 (98)
    on left: 115, on right: 116
relational_exp (99)
    on left: 117 119 121 123, on right: 114 116 119 121 123
$@14 (100)
    on left: 118, on right: 119
$@15 (101)
    on left: 120, on right: 121
$@16 (102)
    on left: 122, on right: 123
additive_exp (103)
    on left: 124 126 128, on right: 117 119 121 123 126 128
$@17 (104)
    on left: 125, on right: 126
$@18 (105)
    on left: 127, on right: 128
mult_exp (106)
    on left: 129 131 133 135, on right: 124 126 128 131 133 135
$@19 (107)
    on left: 130, on right: 131
$@20 (108)
    on left: 132, on right: 133
$@21 (109)
    on left: 134, on right: 135
unary_exp (110)
    on left: 136 137, on right: 96 129 131 133 135 137
postfix_exp (111)
    on left: 138 139 140 141 142, on right: 136 139 140 141 142
primary_exp (112)
    on left: 143 144 145 146, on right: 2 138
argument_exp_list (113)
    on left: 147 148, on right: 140 148
consts (114)
    on left: 149 150 151, on right: 144


State 0

    0 $accept: . program_unit $end

    id          shift, and go to state 1
    type_const  shift, and go to state 2
    DEFINE      shift, and go to state 3
    HEADER      shift, and go to state 4
    '('         shift, and go to state 5

    program_unit         go to state 6
    translation_unit     go to state 7
    external_decl        go to state 8
    function_definition  go to state 9
    decl                 go to state 10
    decl_specs           go to state 11
    type_spec            go to state 12
    declarator           go to state 13
    direct_declarator    go to state 14


State 1

   24 direct_declarator: id .

    $default  reduce using rule 24 (direct_declarator)


State 2

   18 type_spec: type_const .

    $default  reduce using rule 18 (type_spec)


State 3

    2 program_unit: DEFINE . primary_exp program_unit

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    '('          shift, and go to state 20

    primary_exp  go to state 21
    consts       go to state 22


State 4

    1 program_unit: HEADER . program_unit

    id          shift, and go to state 1
    type_const  shift, and go to state 2
    DEFINE      shift, and go to state 3
    HEADER      shift, and go to state 4
    '('         shift, and go to state 5

    program_unit         go to state 23
    translation_unit     go to state 7
    external_decl        go to state 8
    function_definition  go to state 9
    decl                 go to state 10
    decl_specs           go to state 11
    type_spec            go to state 12
    declarator           go to state 13
    direct_declarator    go to state 14


State 5

   25 direct_declarator: '(' . declarator ')'

    id   shift, and go to state 1
    '('  shift, and go to state 5

    declarator         go to state 24
    direct_declarator  go to state 14


State 6

    0 $accept: program_unit . $end

    $end  shift, and go to state 25


State 7

    3 program_unit: translation_unit .
    5 translation_unit: translation_unit . external_decl

    id          shift, and go to state 1
    type_const  shift, and go to state 2
    '('         shift, and go to state 5

    $default  reduce using rule 3 (program_unit)

    external_decl        go to state 26
    function_definition  go to state 9
    decl                 go to state 10
    decl_specs           go to state 11
    type_spec            go to state 12
    declarator           go to state 13
    direct_declarator    go to state 14


State 8

    4 translation_unit: external_decl .

    $default  reduce using rule 4 (translation_unit)


State 9

    6 external_decl: function_definition .

    $default  reduce using rule 6 (external_decl)


State 10

    7 external_decl: decl .

    $default  reduce using rule 7 (external_decl)


State 11

    8 function_definition: decl_specs . declarator decl_list compound_stat
   10                    | decl_specs . declarator compound_stat
   12 decl: decl_specs . init_declarator_list ';'
   13     | decl_specs . ';'

    id   shift, and go to state 1
    ';'  shift, and go to state 27
    '('  shift, and go to state 5

    init_declarator_list  go to state 28
    init_declarator       go to state 29
    declarator            go to state 30
    direct_declarator     go to state 14


State 12

   16 decl_specs: type_spec . decl_specs
   17           | type_spec .

    type_const  shift, and go to state 2

    $default  reduce using rule 17 (decl_specs)

    decl_specs  go to state 31
    type_spec   go to state 12


State 13

    9 function_definition: declarator . decl_list compound_stat
   11                    | declarator . compound_stat

    type_const  shift, and go to state 2
    '{'         shift, and go to state 32

    decl           go to state 33
    decl_list      go to state 34
    decl_specs     go to state 35
    type_spec      go to state 12
    compound_stat  go to state 36


State 14

   23 declarator: direct_declarator .
   26 direct_declarator: direct_declarator . '[' const_exp ']'
   27                  | direct_declarator . '[' ']'
   28                  | direct_declarator . '(' param_type_list ')'
   29                  | direct_declarator . '(' id_list ')'
   30                  | direct_declarator . '(' ')'

    '('  shift, and go to state 37
    '['  shift, and go to state 38

    $default  reduce using rule 23 (declarator)


State 15

  150 consts: char_const .

    $default  reduce using rule 150 (consts)


State 16

  143 primary_exp: id .

    $default  reduce using rule 143 (primary_exp)


State 17

  145 primary_exp: string .

    $default  reduce using rule 145 (primary_exp)


State 18

  149 consts: int_const .

    $default  reduce using rule 149 (consts)


State 19

  151 consts: float_const .

    $default  reduce using rule 151 (consts)


State 20

  146 primary_exp: '(' . exp ')'

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    exp               go to state 40
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 21

    2 program_unit: DEFINE primary_exp . program_unit

    id          shift, and go to state 1
    type_const  shift, and go to state 2
    DEFINE      shift, and go to state 3
    HEADER      shift, and go to state 4
    '('         shift, and go to state 5

    program_unit         go to state 55
    translation_unit     go to state 7
    external_decl        go to state 8
    function_definition  go to state 9
    decl                 go to state 10
    decl_specs           go to state 11
    type_spec            go to state 12
    declarator           go to state 13
    direct_declarator    go to state 14


State 22

  144 primary_exp: consts .

    $default  reduce using rule 144 (primary_exp)


State 23

    1 program_unit: HEADER program_unit .

    $default  reduce using rule 1 (program_unit)


State 24

   25 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 56


State 25

    0 $accept: program_unit $end .

    $default  accept


State 26

    5 translation_unit: translation_unit external_decl .

    $default  reduce using rule 5 (translation_unit)


State 27

   13 decl: decl_specs ';' .

    $default  reduce using rule 13 (decl)


State 28

   12 decl: decl_specs init_declarator_list . ';'
   20 init_declarator_list: init_declarator_list . ',' init_declarator

    ';'  shift, and go to state 57
    ','  shift, and go to state 58


State 29

   19 init_declarator_list: init_declarator .

    $default  reduce using rule 19 (init_declarator_list)


State 30

    8 function_definition: decl_specs declarator . decl_list compound_stat
   10                    | decl_specs declarator . compound_stat
   21 init_declarator: declarator .
   22                | declarator . '=' initializer

    type_const  shift, and go to state 2
    '='         shift, and go to state 59
    '{'         shift, and go to state 32

    $default  reduce using rule 21 (init_declarator)

    decl           go to state 33
    decl_list      go to state 60
    decl_specs     go to state 35
    type_spec      go to state 12
    compound_stat  go to state 61


State 31

   16 decl_specs: type_spec decl_specs .

    $default  reduce using rule 16 (decl_specs)


State 32

   66 compound_stat: '{' . decl_list stat_list '}'
   67              | '{' . stat_list '}'
   68              | '{' . decl_list '}'
   69              | '{' . '}'

    char_const   shift, and go to state 15
    id           shift, and go to state 62
    string       shift, and go to state 17
    type_const   shift, and go to state 2
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    FOR          shift, and go to state 63
    BREAK        shift, and go to state 64
    SWITCH       shift, and go to state 65
    CONTINUE     shift, and go to state 66
    RETURN       shift, and go to state 67
    CASE         shift, and go to state 68
    DEFAULT      shift, and go to state 69
    inc_const    shift, and go to state 39
    ';'          shift, and go to state 70
    '{'          shift, and go to state 32
    '}'          shift, and go to state 71
    '('          shift, and go to state 20

    decl              go to state 33
    decl_list         go to state 72
    decl_specs        go to state 35
    type_spec         go to state 12
    stat              go to state 73
    labeled_stat      go to state 74
    exp_stat          go to state 75
    compound_stat     go to state 76
    stat_list         go to state 77
    selection_stat    go to state 78
    iteration_stat    go to state 79
    jump_stat         go to state 80
    exp               go to state 81
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 33

   14 decl_list: decl .

    $default  reduce using rule 14 (decl_list)


State 34

    9 function_definition: declarator decl_list . compound_stat
   15 decl_list: decl_list . decl

    type_const  shift, and go to state 2
    '{'         shift, and go to state 32

    decl           go to state 82
    decl_specs     go to state 35
    type_spec      go to state 12
    compound_stat  go to state 83


State 35

   12 decl: decl_specs . init_declarator_list ';'
   13     | decl_specs . ';'

    id   shift, and go to state 1
    ';'  shift, and go to state 27
    '('  shift, and go to state 5

    init_declarator_list  go to state 28
    init_declarator       go to state 29
    declarator            go to state 84
    direct_declarator     go to state 14


State 36

   11 function_definition: declarator compound_stat .

    $default  reduce using rule 11 (function_definition)


State 37

   28 direct_declarator: direct_declarator '(' . param_type_list ')'
   29                  | direct_declarator '(' . id_list ')'
   30                  | direct_declarator '(' . ')'

    id          shift, and go to state 85
    type_const  shift, and go to state 2
    ')'         shift, and go to state 86

    decl_specs       go to state 87
    type_spec        go to state 12
    param_type_list  go to state 88
    param_list       go to state 89
    param_decl       go to state 90
    id_list          go to state 91


State 38

   26 direct_declarator: direct_declarator '[' . const_exp ']'
   27                  | direct_declarator '[' . ']'

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20
    ']'          shift, and go to state 92

    conditional_exp   go to state 93
    const_exp         go to state 94
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 95
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 39

  137 unary_exp: inc_const . unary_exp

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    unary_exp    go to state 96
    postfix_exp  go to state 53
    primary_exp  go to state 54
    consts       go to state 22


State 40

   92 exp: exp . ',' assignment_exp
  146 primary_exp: '(' exp . ')'

    ','  shift, and go to state 97
    ')'  shift, and go to state 98


State 41

   91 exp: assignment_exp .

    $default  reduce using rule 91 (exp)


State 42

   93 assignment_exp: conditional_exp .

    $default  reduce using rule 93 (assignment_exp)


State 43

   97 conditional_exp: logical_or_exp .
  101 logical_or_exp: logical_or_exp . or_const $@8 logical_and_exp

    or_const  shift, and go to state 99

    $default  reduce using rule 97 (conditional_exp)


State 44

   99 logical_or_exp: logical_and_exp .
  104 logical_and_exp: logical_and_exp . and_const $@9 inclusive_or_exp

    and_const  shift, and go to state 100

    $default  reduce using rule 99 (logical_or_exp)


State 45

  102 logical_and_exp: inclusive_or_exp .
  107 inclusive_or_exp: inclusive_or_exp . '|' $@10 exclusive_or_exp

    '|'  shift, and go to state 101

    $default  reduce using rule 102 (logical_and_exp)


State 46

  105 inclusive_or_exp: exclusive_or_exp .
  110 exclusive_or_exp: exclusive_or_exp . '^' $@11 and_exp

    '^'  shift, and go to state 102

    $default  reduce using rule 105 (inclusive_or_exp)


State 47

  108 exclusive_or_exp: and_exp .
  113 and_exp: and_exp . '&' $@12 equality_exp

    '&'  shift, and go to state 103

    $default  reduce using rule 108 (exclusive_or_exp)


State 48

  111 and_exp: equality_exp .
  116 equality_exp: equality_exp . eq_const $@13 relational_exp

    eq_const  shift, and go to state 104

    $default  reduce using rule 111 (and_exp)


State 49

  114 equality_exp: relational_exp .
  119 relational_exp: relational_exp . '<' $@14 additive_exp
  121               | relational_exp . '>' $@15 additive_exp
  123               | relational_exp . rel_const $@16 additive_exp

    rel_const  shift, and go to state 105
    '>'        shift, and go to state 106
    '<'        shift, and go to state 107

    $default  reduce using rule 114 (equality_exp)


State 50

  117 relational_exp: additive_exp .
  126 additive_exp: additive_exp . '+' $@17 mult_exp
  128             | additive_exp . '-' $@18 mult_exp

    '+'  shift, and go to state 108
    '-'  shift, and go to state 109

    $default  reduce using rule 117 (relational_exp)


State 51

  124 additive_exp: mult_exp .
  131 mult_exp: mult_exp . '*' $@19 unary_exp
  133         | mult_exp . '/' $@20 unary_exp
  135         | mult_exp . '%' $@21 unary_exp

    '*'  shift, and go to state 110
    '/'  shift, and go to state 111
    '%'  shift, and go to state 112

    $default  reduce using rule 124 (additive_exp)


State 52

   96 assignment_exp: unary_exp . $@6 '=' $@7 conditional_exp
  129 mult_exp: unary_exp .

    '='       reduce using rule 94 ($@6)
    $default  reduce using rule 129 (mult_exp)

    $@6  go to state 113


State 53

  136 unary_exp: postfix_exp .
  139 postfix_exp: postfix_exp . '[' exp ']'
  140            | postfix_exp . '(' argument_exp_list ')'
  141            | postfix_exp . '(' ')'
  142            | postfix_exp . inc_const

    inc_const  shift, and go to state 114
    '('        shift, and go to state 115
    '['        shift, and go to state 116

    $default  reduce using rule 136 (unary_exp)


State 54

  138 postfix_exp: primary_exp .

    $default  reduce using rule 138 (postfix_exp)


State 55

    2 program_unit: DEFINE primary_exp program_unit .

    $default  reduce using rule 2 (program_unit)


State 56

   25 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 25 (direct_declarator)


State 57

   12 decl: decl_specs init_declarator_list ';' .

    $default  reduce using rule 12 (decl)


State 58

   20 init_declarator_list: init_declarator_list ',' . init_declarator

    id   shift, and go to state 1
    '('  shift, and go to state 5

    init_declarator    go to state 117
    declarator         go to state 84
    direct_declarator  go to state 14


State 59

   22 init_declarator: declarator '=' . initializer

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '{'          shift, and go to state 118
    '('          shift, and go to state 20

    initializer       go to state 119
    assignment_exp    go to state 120
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 60

    8 function_definition: decl_specs declarator decl_list . compound_stat
   15 decl_list: decl_list . decl

    type_const  shift, and go to state 2
    '{'         shift, and go to state 32

    decl           go to state 82
    decl_specs     go to state 35
    type_spec      go to state 12
    compound_stat  go to state 121


State 61

   10 function_definition: decl_specs declarator compound_stat .

    $default  reduce using rule 10 (function_definition)


State 62

   61 labeled_stat: id . ':' stat
  143 primary_exp: id .

    ':'  shift, and go to state 122

    $default  reduce using rule 143 (primary_exp)


State 63

   74 iteration_stat: FOR . '(' exp ';' exp ';' exp ')' stat
   75               | FOR . '(' exp ';' exp ';' ')' stat
   76               | FOR . '(' exp ';' ';' exp ')' stat
   78               | FOR . '(' exp ';' ';' ')' $@2 stat
   79               | FOR . '(' M ';' exp ';' exp ')' stat
   81               | FOR . '(' ';' exp ';' ')' $@3 stat
   83               | FOR . '(' ';' ';' $@4 exp ')' stat
   85               | FOR . '(' ';' ';' ')' $@5 stat

    '('  shift, and go to state 123


State 64

   88 jump_stat: BREAK . ';'

    ';'  shift, and go to state 124


State 65

   73 selection_stat: SWITCH . '(' exp ')' $@1 stat

    '('  shift, and go to state 125


State 66

   87 jump_stat: CONTINUE . ';'

    ';'  shift, and go to state 126


State 67

   89 jump_stat: RETURN . exp ';'
   90          | RETURN . ';'

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    ';'          shift, and go to state 127
    '('          shift, and go to state 20

    exp               go to state 128
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 68

   62 labeled_stat: CASE . const_exp ':' stat

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    conditional_exp   go to state 93
    const_exp         go to state 129
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 95
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 69

   63 labeled_stat: DEFAULT . ':' stat

    ':'  shift, and go to state 130


State 70

   65 exp_stat: ';' .

    $default  reduce using rule 65 (exp_stat)


State 71

   69 compound_stat: '{' '}' .

    $default  reduce using rule 69 (compound_stat)


State 72

   15 decl_list: decl_list . decl
   66 compound_stat: '{' decl_list . stat_list '}'
   68              | '{' decl_list . '}'

    char_const   shift, and go to state 15
    id           shift, and go to state 62
    string       shift, and go to state 17
    type_const   shift, and go to state 2
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    FOR          shift, and go to state 63
    BREAK        shift, and go to state 64
    SWITCH       shift, and go to state 65
    CONTINUE     shift, and go to state 66
    RETURN       shift, and go to state 67
    CASE         shift, and go to state 68
    DEFAULT      shift, and go to state 69
    inc_const    shift, and go to state 39
    ';'          shift, and go to state 70
    '{'          shift, and go to state 32
    '}'          shift, and go to state 131
    '('          shift, and go to state 20

    decl              go to state 82
    decl_specs        go to state 35
    type_spec         go to state 12
    stat              go to state 73
    labeled_stat      go to state 74
    exp_stat          go to state 75
    compound_stat     go to state 76
    stat_list         go to state 132
    selection_stat    go to state 78
    iteration_stat    go to state 79
    jump_stat         go to state 80
    exp               go to state 81
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 73

   70 stat_list: stat .

    $default  reduce using rule 70 (stat_list)


State 74

   55 stat: labeled_stat .

    $default  reduce using rule 55 (stat)


State 75

   56 stat: exp_stat .

    $default  reduce using rule 56 (stat)


State 76

   57 stat: compound_stat .

    $default  reduce using rule 57 (stat)


State 77

   67 compound_stat: '{' stat_list . '}'
   71 stat_list: stat_list . stat

    char_const   shift, and go to state 15
    id           shift, and go to state 62
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    FOR          shift, and go to state 63
    BREAK        shift, and go to state 64
    SWITCH       shift, and go to state 65
    CONTINUE     shift, and go to state 66
    RETURN       shift, and go to state 67
    CASE         shift, and go to state 68
    DEFAULT      shift, and go to state 69
    inc_const    shift, and go to state 39
    ';'          shift, and go to state 70
    '{'          shift, and go to state 32
    '}'          shift, and go to state 133
    '('          shift, and go to state 20

    stat              go to state 134
    labeled_stat      go to state 74
    exp_stat          go to state 75
    compound_stat     go to state 76
    selection_stat    go to state 78
    iteration_stat    go to state 79
    jump_stat         go to state 80
    exp               go to state 81
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 78

   58 stat: selection_stat .

    $default  reduce using rule 58 (stat)


State 79

   59 stat: iteration_stat .

    $default  reduce using rule 59 (stat)


State 80

   60 stat: jump_stat .

    $default  reduce using rule 60 (stat)


State 81

   64 exp_stat: exp . ';'
   92 exp: exp . ',' assignment_exp

    ';'  shift, and go to state 135
    ','  shift, and go to state 97


State 82

   15 decl_list: decl_list decl .

    $default  reduce using rule 15 (decl_list)


State 83

    9 function_definition: declarator decl_list compound_stat .

    $default  reduce using rule 9 (function_definition)


State 84

   21 init_declarator: declarator .
   22                | declarator . '=' initializer

    '='  shift, and go to state 59

    $default  reduce using rule 21 (init_declarator)


State 85

   38 id_list: id .

    $default  reduce using rule 38 (id_list)


State 86

   30 direct_declarator: direct_declarator '(' ')' .

    $default  reduce using rule 30 (direct_declarator)


State 87

   35 param_decl: decl_specs . declarator
   36           | decl_specs . abstract_declarator
   37           | decl_specs .

    id   shift, and go to state 1
    '('  shift, and go to state 136
    '['  shift, and go to state 137

    $default  reduce using rule 37 (param_decl)

    declarator                  go to state 138
    direct_declarator           go to state 14
    abstract_declarator         go to state 139
    direct_abstract_declarator  go to state 140


State 88

   28 direct_declarator: direct_declarator '(' param_type_list . ')'

    ')'  shift, and go to state 141


State 89

   31 param_type_list: param_list .
   32                | param_list . ',' param_const
   34 param_list: param_list . ','

    ','  shift, and go to state 142

    $default  reduce using rule 31 (param_type_list)


State 90

   33 param_list: param_decl .

    $default  reduce using rule 33 (param_list)


State 91

   29 direct_declarator: direct_declarator '(' id_list . ')'
   39 id_list: id_list . ',' id

    ','  shift, and go to state 143
    ')'  shift, and go to state 144


State 92

   27 direct_declarator: direct_declarator '[' ']' .

    $default  reduce using rule 27 (direct_declarator)


State 93

   98 const_exp: conditional_exp .

    $default  reduce using rule 98 (const_exp)


State 94

   26 direct_declarator: direct_declarator '[' const_exp . ']'

    ']'  shift, and go to state 145


State 95

  129 mult_exp: unary_exp .

    $default  reduce using rule 129 (mult_exp)


State 96

  137 unary_exp: inc_const unary_exp .

    $default  reduce using rule 137 (unary_exp)


State 97

   92 exp: exp ',' . assignment_exp

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    assignment_exp    go to state 146
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 98

  146 primary_exp: '(' exp ')' .

    $default  reduce using rule 146 (primary_exp)


State 99

  101 logical_or_exp: logical_or_exp or_const . $@8 logical_and_exp

    $default  reduce using rule 100 ($@8)

    $@8  go to state 147


State 100

  104 logical_and_exp: logical_and_exp and_const . $@9 inclusive_or_exp

    $default  reduce using rule 103 ($@9)

    $@9  go to state 148


State 101

  107 inclusive_or_exp: inclusive_or_exp '|' . $@10 exclusive_or_exp

    $default  reduce using rule 106 ($@10)

    $@10  go to state 149


State 102

  110 exclusive_or_exp: exclusive_or_exp '^' . $@11 and_exp

    $default  reduce using rule 109 ($@11)

    $@11  go to state 150


State 103

  113 and_exp: and_exp '&' . $@12 equality_exp

    $default  reduce using rule 112 ($@12)

    $@12  go to state 151


State 104

  116 equality_exp: equality_exp eq_const . $@13 relational_exp

    $default  reduce using rule 115 ($@13)

    $@13  go to state 152


State 105

  123 relational_exp: relational_exp rel_const . $@16 additive_exp

    $default  reduce using rule 122 ($@16)

    $@16  go to state 153


State 106

  121 relational_exp: relational_exp '>' . $@15 additive_exp

    $default  reduce using rule 120 ($@15)

    $@15  go to state 154


State 107

  119 relational_exp: relational_exp '<' . $@14 additive_exp

    $default  reduce using rule 118 ($@14)

    $@14  go to state 155


State 108

  126 additive_exp: additive_exp '+' . $@17 mult_exp

    $default  reduce using rule 125 ($@17)

    $@17  go to state 156


State 109

  128 additive_exp: additive_exp '-' . $@18 mult_exp

    $default  reduce using rule 127 ($@18)

    $@18  go to state 157


State 110

  131 mult_exp: mult_exp '*' . $@19 unary_exp

    $default  reduce using rule 130 ($@19)

    $@19  go to state 158


State 111

  133 mult_exp: mult_exp '/' . $@20 unary_exp

    $default  reduce using rule 132 ($@20)

    $@20  go to state 159


State 112

  135 mult_exp: mult_exp '%' . $@21 unary_exp

    $default  reduce using rule 134 ($@21)

    $@21  go to state 160


State 113

   96 assignment_exp: unary_exp $@6 . '=' $@7 conditional_exp

    '='  shift, and go to state 161


State 114

  142 postfix_exp: postfix_exp inc_const .

    $default  reduce using rule 142 (postfix_exp)


State 115

  140 postfix_exp: postfix_exp '(' . argument_exp_list ')'
  141            | postfix_exp '(' . ')'

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20
    ')'          shift, and go to state 162

    assignment_exp     go to state 163
    conditional_exp    go to state 42
    logical_or_exp     go to state 43
    logical_and_exp    go to state 44
    inclusive_or_exp   go to state 45
    exclusive_or_exp   go to state 46
    and_exp            go to state 47
    equality_exp       go to state 48
    relational_exp     go to state 49
    additive_exp       go to state 50
    mult_exp           go to state 51
    unary_exp          go to state 52
    postfix_exp        go to state 53
    primary_exp        go to state 54
    argument_exp_list  go to state 164
    consts             go to state 22


State 116

  139 postfix_exp: postfix_exp '[' . exp ']'

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    exp               go to state 165
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 117

   20 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 20 (init_declarator_list)


State 118

   41 initializer: '{' . initializer_list '}'
   42            | '{' . initializer_list ',' '}'

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '{'          shift, and go to state 118
    '('          shift, and go to state 20

    initializer       go to state 166
    initializer_list  go to state 167
    assignment_exp    go to state 120
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 119

   22 init_declarator: declarator '=' initializer .

    $default  reduce using rule 22 (init_declarator)


State 120

   40 initializer: assignment_exp .

    $default  reduce using rule 40 (initializer)


State 121

    8 function_definition: decl_specs declarator decl_list compound_stat .

    $default  reduce using rule 8 (function_definition)


State 122

   61 labeled_stat: id ':' . stat

    char_const   shift, and go to state 15
    id           shift, and go to state 62
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    FOR          shift, and go to state 63
    BREAK        shift, and go to state 64
    SWITCH       shift, and go to state 65
    CONTINUE     shift, and go to state 66
    RETURN       shift, and go to state 67
    CASE         shift, and go to state 68
    DEFAULT      shift, and go to state 69
    inc_const    shift, and go to state 39
    ';'          shift, and go to state 70
    '{'          shift, and go to state 32
    '('          shift, and go to state 20

    stat              go to state 168
    labeled_stat      go to state 74
    exp_stat          go to state 75
    compound_stat     go to state 76
    selection_stat    go to state 78
    iteration_stat    go to state 79
    jump_stat         go to state 80
    exp               go to state 81
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 123

   74 iteration_stat: FOR '(' . exp ';' exp ';' exp ')' stat
   75               | FOR '(' . exp ';' exp ';' ')' stat
   76               | FOR '(' . exp ';' ';' exp ')' stat
   78               | FOR '(' . exp ';' ';' ')' $@2 stat
   79               | FOR '(' . M ';' exp ';' exp ')' stat
   81               | FOR '(' . ';' exp ';' ')' $@3 stat
   83               | FOR '(' . ';' ';' $@4 exp ')' stat
   85               | FOR '(' . ';' ';' ')' $@5 stat

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    ';'          shift, and go to state 169
    '('          shift, and go to state 20

    ';'  [reduce using rule 86 (M)]

    M                 go to state 170
    exp               go to state 171
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 124

   88 jump_stat: BREAK ';' .

    $default  reduce using rule 88 (jump_stat)


State 125

   73 selection_stat: SWITCH '(' . exp ')' $@1 stat

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    exp               go to state 172
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 126

   87 jump_stat: CONTINUE ';' .

    $default  reduce using rule 87 (jump_stat)


State 127

   90 jump_stat: RETURN ';' .

    $default  reduce using rule 90 (jump_stat)


State 128

   89 jump_stat: RETURN exp . ';'
   92 exp: exp . ',' assignment_exp

    ';'  shift, and go to state 173
    ','  shift, and go to state 97


State 129

   62 labeled_stat: CASE const_exp . ':' stat

    ':'  shift, and go to state 174


State 130

   63 labeled_stat: DEFAULT ':' . stat

    char_const   shift, and go to state 15
    id           shift, and go to state 62
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    FOR          shift, and go to state 63
    BREAK        shift, and go to state 64
    SWITCH       shift, and go to state 65
    CONTINUE     shift, and go to state 66
    RETURN       shift, and go to state 67
    CASE         shift, and go to state 68
    DEFAULT      shift, and go to state 69
    inc_const    shift, and go to state 39
    ';'          shift, and go to state 70
    '{'          shift, and go to state 32
    '('          shift, and go to state 20

    stat              go to state 175
    labeled_stat      go to state 74
    exp_stat          go to state 75
    compound_stat     go to state 76
    selection_stat    go to state 78
    iteration_stat    go to state 79
    jump_stat         go to state 80
    exp               go to state 81
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 131

   68 compound_stat: '{' decl_list '}' .

    $default  reduce using rule 68 (compound_stat)


State 132

   66 compound_stat: '{' decl_list stat_list . '}'
   71 stat_list: stat_list . stat

    char_const   shift, and go to state 15
    id           shift, and go to state 62
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    FOR          shift, and go to state 63
    BREAK        shift, and go to state 64
    SWITCH       shift, and go to state 65
    CONTINUE     shift, and go to state 66
    RETURN       shift, and go to state 67
    CASE         shift, and go to state 68
    DEFAULT      shift, and go to state 69
    inc_const    shift, and go to state 39
    ';'          shift, and go to state 70
    '{'          shift, and go to state 32
    '}'          shift, and go to state 176
    '('          shift, and go to state 20

    stat              go to state 134
    labeled_stat      go to state 74
    exp_stat          go to state 75
    compound_stat     go to state 76
    selection_stat    go to state 78
    iteration_stat    go to state 79
    jump_stat         go to state 80
    exp               go to state 81
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 133

   67 compound_stat: '{' stat_list '}' .

    $default  reduce using rule 67 (compound_stat)


State 134

   71 stat_list: stat_list stat .

    $default  reduce using rule 71 (stat_list)


State 135

   64 exp_stat: exp ';' .

    $default  reduce using rule 64 (exp_stat)


State 136

   25 direct_declarator: '(' . declarator ')'
   46 direct_abstract_declarator: '(' . abstract_declarator ')'
   52                           | '(' . param_type_list ')'
   54                           | '(' . ')'

    id          shift, and go to state 1
    type_const  shift, and go to state 2
    '('         shift, and go to state 136
    ')'         shift, and go to state 177
    '['         shift, and go to state 137

    decl_specs                  go to state 87
    type_spec                   go to state 12
    declarator                  go to state 24
    direct_declarator           go to state 14
    param_type_list             go to state 178
    param_list                  go to state 89
    param_decl                  go to state 90
    abstract_declarator         go to state 179
    direct_abstract_declarator  go to state 140


State 137

   48 direct_abstract_declarator: '[' . const_exp ']'
   50                           | '[' . ']'

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20
    ']'          shift, and go to state 180

    conditional_exp   go to state 93
    const_exp         go to state 181
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 95
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 138

   35 param_decl: decl_specs declarator .

    $default  reduce using rule 35 (param_decl)


State 139

   36 param_decl: decl_specs abstract_declarator .

    $default  reduce using rule 36 (param_decl)


State 140

   45 abstract_declarator: direct_abstract_declarator .
   47 direct_abstract_declarator: direct_abstract_declarator . '[' const_exp ']'
   49                           | direct_abstract_declarator . '[' ']'
   51                           | direct_abstract_declarator . '(' param_type_list ')'
   53                           | direct_abstract_declarator . '(' ')'

    '('  shift, and go to state 182
    '['  shift, and go to state 183

    $default  reduce using rule 45 (abstract_declarator)


State 141

   28 direct_declarator: direct_declarator '(' param_type_list ')' .

    $default  reduce using rule 28 (direct_declarator)


State 142

   32 param_type_list: param_list ',' . param_const
   34 param_list: param_list ',' .

    param_const  shift, and go to state 184

    $default  reduce using rule 34 (param_list)


State 143

   39 id_list: id_list ',' . id

    id  shift, and go to state 185


State 144

   29 direct_declarator: direct_declarator '(' id_list ')' .

    $default  reduce using rule 29 (direct_declarator)


State 145

   26 direct_declarator: direct_declarator '[' const_exp ']' .

    $default  reduce using rule 26 (direct_declarator)


State 146

   92 exp: exp ',' assignment_exp .

    $default  reduce using rule 92 (exp)


State 147

  101 logical_or_exp: logical_or_exp or_const $@8 . logical_and_exp

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    logical_and_exp   go to state 186
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 95
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 148

  104 logical_and_exp: logical_and_exp and_const $@9 . inclusive_or_exp

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    inclusive_or_exp  go to state 187
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 95
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 149

  107 inclusive_or_exp: inclusive_or_exp '|' $@10 . exclusive_or_exp

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    exclusive_or_exp  go to state 188
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 95
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 150

  110 exclusive_or_exp: exclusive_or_exp '^' $@11 . and_exp

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    and_exp         go to state 189
    equality_exp    go to state 48
    relational_exp  go to state 49
    additive_exp    go to state 50
    mult_exp        go to state 51
    unary_exp       go to state 95
    postfix_exp     go to state 53
    primary_exp     go to state 54
    consts          go to state 22


State 151

  113 and_exp: and_exp '&' $@12 . equality_exp

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    equality_exp    go to state 190
    relational_exp  go to state 49
    additive_exp    go to state 50
    mult_exp        go to state 51
    unary_exp       go to state 95
    postfix_exp     go to state 53
    primary_exp     go to state 54
    consts          go to state 22


State 152

  116 equality_exp: equality_exp eq_const $@13 . relational_exp

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    relational_exp  go to state 191
    additive_exp    go to state 50
    mult_exp        go to state 51
    unary_exp       go to state 95
    postfix_exp     go to state 53
    primary_exp     go to state 54
    consts          go to state 22


State 153

  123 relational_exp: relational_exp rel_const $@16 . additive_exp

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    additive_exp  go to state 192
    mult_exp      go to state 51
    unary_exp     go to state 95
    postfix_exp   go to state 53
    primary_exp   go to state 54
    consts        go to state 22


State 154

  121 relational_exp: relational_exp '>' $@15 . additive_exp

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    additive_exp  go to state 193
    mult_exp      go to state 51
    unary_exp     go to state 95
    postfix_exp   go to state 53
    primary_exp   go to state 54
    consts        go to state 22


State 155

  119 relational_exp: relational_exp '<' $@14 . additive_exp

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    additive_exp  go to state 194
    mult_exp      go to state 51
    unary_exp     go to state 95
    postfix_exp   go to state 53
    primary_exp   go to state 54
    consts        go to state 22


State 156

  126 additive_exp: additive_exp '+' $@17 . mult_exp

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    mult_exp     go to state 195
    unary_exp    go to state 95
    postfix_exp  go to state 53
    primary_exp  go to state 54
    consts       go to state 22


State 157

  128 additive_exp: additive_exp '-' $@18 . mult_exp

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    mult_exp     go to state 196
    unary_exp    go to state 95
    postfix_exp  go to state 53
    primary_exp  go to state 54
    consts       go to state 22


State 158

  131 mult_exp: mult_exp '*' $@19 . unary_exp

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    unary_exp    go to state 197
    postfix_exp  go to state 53
    primary_exp  go to state 54
    consts       go to state 22


State 159

  133 mult_exp: mult_exp '/' $@20 . unary_exp

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    unary_exp    go to state 198
    postfix_exp  go to state 53
    primary_exp  go to state 54
    consts       go to state 22


State 160

  135 mult_exp: mult_exp '%' $@21 . unary_exp

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    unary_exp    go to state 199
    postfix_exp  go to state 53
    primary_exp  go to state 54
    consts       go to state 22


State 161

   96 assignment_exp: unary_exp $@6 '=' . $@7 conditional_exp

    $default  reduce using rule 95 ($@7)

    $@7  go to state 200


State 162

  141 postfix_exp: postfix_exp '(' ')' .

    $default  reduce using rule 141 (postfix_exp)


State 163

  147 argument_exp_list: assignment_exp .

    $default  reduce using rule 147 (argument_exp_list)


State 164

  140 postfix_exp: postfix_exp '(' argument_exp_list . ')'
  148 argument_exp_list: argument_exp_list . ',' assignment_exp

    ','  shift, and go to state 201
    ')'  shift, and go to state 202


State 165

   92 exp: exp . ',' assignment_exp
  139 postfix_exp: postfix_exp '[' exp . ']'

    ','  shift, and go to state 97
    ']'  shift, and go to state 203


State 166

   43 initializer_list: initializer .

    $default  reduce using rule 43 (initializer_list)


State 167

   41 initializer: '{' initializer_list . '}'
   42            | '{' initializer_list . ',' '}'
   44 initializer_list: initializer_list . ',' initializer

    '}'  shift, and go to state 204
    ','  shift, and go to state 205


State 168

   61 labeled_stat: id ':' stat .

    $default  reduce using rule 61 (labeled_stat)


State 169

   81 iteration_stat: FOR '(' ';' . exp ';' ')' $@3 stat
   83               | FOR '(' ';' . ';' $@4 exp ')' stat
   85               | FOR '(' ';' . ';' ')' $@5 stat

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    ';'          shift, and go to state 206
    '('          shift, and go to state 20

    exp               go to state 207
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 170

   79 iteration_stat: FOR '(' M . ';' exp ';' exp ')' stat

    ';'  shift, and go to state 208


State 171

   74 iteration_stat: FOR '(' exp . ';' exp ';' exp ')' stat
   75               | FOR '(' exp . ';' exp ';' ')' stat
   76               | FOR '(' exp . ';' ';' exp ')' stat
   78               | FOR '(' exp . ';' ';' ')' $@2 stat
   92 exp: exp . ',' assignment_exp

    ';'  shift, and go to state 209
    ','  shift, and go to state 97


State 172

   73 selection_stat: SWITCH '(' exp . ')' $@1 stat
   92 exp: exp . ',' assignment_exp

    ','  shift, and go to state 97
    ')'  shift, and go to state 210


State 173

   89 jump_stat: RETURN exp ';' .

    $default  reduce using rule 89 (jump_stat)


State 174

   62 labeled_stat: CASE const_exp ':' . stat

    char_const   shift, and go to state 15
    id           shift, and go to state 62
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    FOR          shift, and go to state 63
    BREAK        shift, and go to state 64
    SWITCH       shift, and go to state 65
    CONTINUE     shift, and go to state 66
    RETURN       shift, and go to state 67
    CASE         shift, and go to state 68
    DEFAULT      shift, and go to state 69
    inc_const    shift, and go to state 39
    ';'          shift, and go to state 70
    '{'          shift, and go to state 32
    '('          shift, and go to state 20

    stat              go to state 211
    labeled_stat      go to state 74
    exp_stat          go to state 75
    compound_stat     go to state 76
    selection_stat    go to state 78
    iteration_stat    go to state 79
    jump_stat         go to state 80
    exp               go to state 81
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 175

   63 labeled_stat: DEFAULT ':' stat .

    $default  reduce using rule 63 (labeled_stat)


State 176

   66 compound_stat: '{' decl_list stat_list '}' .

    $default  reduce using rule 66 (compound_stat)


State 177

   54 direct_abstract_declarator: '(' ')' .

    $default  reduce using rule 54 (direct_abstract_declarator)


State 178

   52 direct_abstract_declarator: '(' param_type_list . ')'

    ')'  shift, and go to state 212


State 179

   46 direct_abstract_declarator: '(' abstract_declarator . ')'

    ')'  shift, and go to state 213


State 180

   50 direct_abstract_declarator: '[' ']' .

    $default  reduce using rule 50 (direct_abstract_declarator)


State 181

   48 direct_abstract_declarator: '[' const_exp . ']'

    ']'  shift, and go to state 214


State 182

   51 direct_abstract_declarator: direct_abstract_declarator '(' . param_type_list ')'
   53                           | direct_abstract_declarator '(' . ')'

    type_const  shift, and go to state 2
    ')'         shift, and go to state 215

    decl_specs       go to state 87
    type_spec        go to state 12
    param_type_list  go to state 216
    param_list       go to state 89
    param_decl       go to state 90


State 183

   47 direct_abstract_declarator: direct_abstract_declarator '[' . const_exp ']'
   49                           | direct_abstract_declarator '[' . ']'

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20
    ']'          shift, and go to state 217

    conditional_exp   go to state 93
    const_exp         go to state 218
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 95
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 184

   32 param_type_list: param_list ',' param_const .

    $default  reduce using rule 32 (param_type_list)


State 185

   39 id_list: id_list ',' id .

    $default  reduce using rule 39 (id_list)


State 186

  101 logical_or_exp: logical_or_exp or_const $@8 logical_and_exp .
  104 logical_and_exp: logical_and_exp . and_const $@9 inclusive_or_exp

    and_const  shift, and go to state 100

    $default  reduce using rule 101 (logical_or_exp)


State 187

  104 logical_and_exp: logical_and_exp and_const $@9 inclusive_or_exp .
  107 inclusive_or_exp: inclusive_or_exp . '|' $@10 exclusive_or_exp

    '|'  shift, and go to state 101

    $default  reduce using rule 104 (logical_and_exp)


State 188

  107 inclusive_or_exp: inclusive_or_exp '|' $@10 exclusive_or_exp .
  110 exclusive_or_exp: exclusive_or_exp . '^' $@11 and_exp

    '^'  shift, and go to state 102

    $default  reduce using rule 107 (inclusive_or_exp)


State 189

  110 exclusive_or_exp: exclusive_or_exp '^' $@11 and_exp .
  113 and_exp: and_exp . '&' $@12 equality_exp

    '&'  shift, and go to state 103

    $default  reduce using rule 110 (exclusive_or_exp)


State 190

  113 and_exp: and_exp '&' $@12 equality_exp .
  116 equality_exp: equality_exp . eq_const $@13 relational_exp

    eq_const  shift, and go to state 104

    $default  reduce using rule 113 (and_exp)


State 191

  116 equality_exp: equality_exp eq_const $@13 relational_exp .
  119 relational_exp: relational_exp . '<' $@14 additive_exp
  121               | relational_exp . '>' $@15 additive_exp
  123               | relational_exp . rel_const $@16 additive_exp

    rel_const  shift, and go to state 105
    '>'        shift, and go to state 106
    '<'        shift, and go to state 107

    $default  reduce using rule 116 (equality_exp)


State 192

  123 relational_exp: relational_exp rel_const $@16 additive_exp .
  126 additive_exp: additive_exp . '+' $@17 mult_exp
  128             | additive_exp . '-' $@18 mult_exp

    '+'  shift, and go to state 108
    '-'  shift, and go to state 109

    $default  reduce using rule 123 (relational_exp)


State 193

  121 relational_exp: relational_exp '>' $@15 additive_exp .
  126 additive_exp: additive_exp . '+' $@17 mult_exp
  128             | additive_exp . '-' $@18 mult_exp

    '+'  shift, and go to state 108
    '-'  shift, and go to state 109

    $default  reduce using rule 121 (relational_exp)


State 194

  119 relational_exp: relational_exp '<' $@14 additive_exp .
  126 additive_exp: additive_exp . '+' $@17 mult_exp
  128             | additive_exp . '-' $@18 mult_exp

    '+'  shift, and go to state 108
    '-'  shift, and go to state 109

    $default  reduce using rule 119 (relational_exp)


State 195

  126 additive_exp: additive_exp '+' $@17 mult_exp .
  131 mult_exp: mult_exp . '*' $@19 unary_exp
  133         | mult_exp . '/' $@20 unary_exp
  135         | mult_exp . '%' $@21 unary_exp

    '*'  shift, and go to state 110
    '/'  shift, and go to state 111
    '%'  shift, and go to state 112

    $default  reduce using rule 126 (additive_exp)


State 196

  128 additive_exp: additive_exp '-' $@18 mult_exp .
  131 mult_exp: mult_exp . '*' $@19 unary_exp
  133         | mult_exp . '/' $@20 unary_exp
  135         | mult_exp . '%' $@21 unary_exp

    '*'  shift, and go to state 110
    '/'  shift, and go to state 111
    '%'  shift, and go to state 112

    $default  reduce using rule 128 (additive_exp)


State 197

  131 mult_exp: mult_exp '*' $@19 unary_exp .

    $default  reduce using rule 131 (mult_exp)


State 198

  133 mult_exp: mult_exp '/' $@20 unary_exp .

    $default  reduce using rule 133 (mult_exp)


State 199

  135 mult_exp: mult_exp '%' $@21 unary_exp .

    $default  reduce using rule 135 (mult_exp)


State 200

   96 assignment_exp: unary_exp $@6 '=' $@7 . conditional_exp

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    conditional_exp   go to state 219
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 95
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 201

  148 argument_exp_list: argument_exp_list ',' . assignment_exp

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    assignment_exp    go to state 220
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 202

  140 postfix_exp: postfix_exp '(' argument_exp_list ')' .

    $default  reduce using rule 140 (postfix_exp)


State 203

  139 postfix_exp: postfix_exp '[' exp ']' .

    $default  reduce using rule 139 (postfix_exp)


State 204

   41 initializer: '{' initializer_list '}' .

    $default  reduce using rule 41 (initializer)


State 205

   42 initializer: '{' initializer_list ',' . '}'
   44 initializer_list: initializer_list ',' . initializer

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '{'          shift, and go to state 118
    '}'          shift, and go to state 221
    '('          shift, and go to state 20

    initializer       go to state 222
    assignment_exp    go to state 120
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 206

   83 iteration_stat: FOR '(' ';' ';' . $@4 exp ')' stat
   85               | FOR '(' ';' ';' . ')' $@5 stat

    ')'  shift, and go to state 223

    $default  reduce using rule 82 ($@4)

    $@4  go to state 224


State 207

   81 iteration_stat: FOR '(' ';' exp . ';' ')' $@3 stat
   92 exp: exp . ',' assignment_exp

    ';'  shift, and go to state 225
    ','  shift, and go to state 97


State 208

   79 iteration_stat: FOR '(' M ';' . exp ';' exp ')' stat

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    exp               go to state 226
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 209

   74 iteration_stat: FOR '(' exp ';' . exp ';' exp ')' stat
   75               | FOR '(' exp ';' . exp ';' ')' stat
   76               | FOR '(' exp ';' . ';' exp ')' stat
   78               | FOR '(' exp ';' . ';' ')' $@2 stat

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    ';'          shift, and go to state 227
    '('          shift, and go to state 20

    exp               go to state 228
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 210

   73 selection_stat: SWITCH '(' exp ')' . $@1 stat

    $default  reduce using rule 72 ($@1)

    $@1  go to state 229


State 211

   62 labeled_stat: CASE const_exp ':' stat .

    $default  reduce using rule 62 (labeled_stat)


State 212

   52 direct_abstract_declarator: '(' param_type_list ')' .

    $default  reduce using rule 52 (direct_abstract_declarator)


State 213

   46 direct_abstract_declarator: '(' abstract_declarator ')' .

    $default  reduce using rule 46 (direct_abstract_declarator)


State 214

   48 direct_abstract_declarator: '[' const_exp ']' .

    $default  reduce using rule 48 (direct_abstract_declarator)


State 215

   53 direct_abstract_declarator: direct_abstract_declarator '(' ')' .

    $default  reduce using rule 53 (direct_abstract_declarator)


State 216

   51 direct_abstract_declarator: direct_abstract_declarator '(' param_type_list . ')'

    ')'  shift, and go to state 230


State 217

   49 direct_abstract_declarator: direct_abstract_declarator '[' ']' .

    $default  reduce using rule 49 (direct_abstract_declarator)


State 218

   47 direct_abstract_declarator: direct_abstract_declarator '[' const_exp . ']'

    ']'  shift, and go to state 231


State 219

   96 assignment_exp: unary_exp $@6 '=' $@7 conditional_exp .

    $default  reduce using rule 96 (assignment_exp)


State 220

  148 argument_exp_list: argument_exp_list ',' assignment_exp .

    $default  reduce using rule 148 (argument_exp_list)


State 221

   42 initializer: '{' initializer_list ',' '}' .

    $default  reduce using rule 42 (initializer)


State 222

   44 initializer_list: initializer_list ',' initializer .

    $default  reduce using rule 44 (initializer_list)


State 223

   85 iteration_stat: FOR '(' ';' ';' ')' . $@5 stat

    $default  reduce using rule 84 ($@5)

    $@5  go to state 232


State 224

   83 iteration_stat: FOR '(' ';' ';' $@4 . exp ')' stat

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    exp               go to state 233
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 225

   81 iteration_stat: FOR '(' ';' exp ';' . ')' $@3 stat

    ')'  shift, and go to state 234


State 226

   79 iteration_stat: FOR '(' M ';' exp . ';' exp ')' stat
   92 exp: exp . ',' assignment_exp

    ';'  shift, and go to state 235
    ','  shift, and go to state 97


State 227

   76 iteration_stat: FOR '(' exp ';' ';' . exp ')' stat
   78               | FOR '(' exp ';' ';' . ')' $@2 stat

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20
    ')'          shift, and go to state 236

    exp               go to state 237
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 228

   74 iteration_stat: FOR '(' exp ';' exp . ';' exp ')' stat
   75               | FOR '(' exp ';' exp . ';' ')' stat
   92 exp: exp . ',' assignment_exp

    ';'  shift, and go to state 238
    ','  shift, and go to state 97


State 229

   73 selection_stat: SWITCH '(' exp ')' $@1 . stat

    char_const   shift, and go to state 15
    id           shift, and go to state 62
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    FOR          shift, and go to state 63
    BREAK        shift, and go to state 64
    SWITCH       shift, and go to state 65
    CONTINUE     shift, and go to state 66
    RETURN       shift, and go to state 67
    CASE         shift, and go to state 68
    DEFAULT      shift, and go to state 69
    inc_const    shift, and go to state 39
    ';'          shift, and go to state 70
    '{'          shift, and go to state 32
    '('          shift, and go to state 20

    stat              go to state 239
    labeled_stat      go to state 74
    exp_stat          go to state 75
    compound_stat     go to state 76
    selection_stat    go to state 78
    iteration_stat    go to state 79
    jump_stat         go to state 80
    exp               go to state 81
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 230

   51 direct_abstract_declarator: direct_abstract_declarator '(' param_type_list ')' .

    $default  reduce using rule 51 (direct_abstract_declarator)


State 231

   47 direct_abstract_declarator: direct_abstract_declarator '[' const_exp ']' .

    $default  reduce using rule 47 (direct_abstract_declarator)


State 232

   85 iteration_stat: FOR '(' ';' ';' ')' $@5 . stat

    char_const   shift, and go to state 15
    id           shift, and go to state 62
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    FOR          shift, and go to state 63
    BREAK        shift, and go to state 64
    SWITCH       shift, and go to state 65
    CONTINUE     shift, and go to state 66
    RETURN       shift, and go to state 67
    CASE         shift, and go to state 68
    DEFAULT      shift, and go to state 69
    inc_const    shift, and go to state 39
    ';'          shift, and go to state 70
    '{'          shift, and go to state 32
    '('          shift, and go to state 20

    stat              go to state 240
    labeled_stat      go to state 74
    exp_stat          go to state 75
    compound_stat     go to state 76
    selection_stat    go to state 78
    iteration_stat    go to state 79
    jump_stat         go to state 80
    exp               go to state 81
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 233

   83 iteration_stat: FOR '(' ';' ';' $@4 exp . ')' stat
   92 exp: exp . ',' assignment_exp

    ','  shift, and go to state 97
    ')'  shift, and go to state 241


State 234

   81 iteration_stat: FOR '(' ';' exp ';' ')' . $@3 stat

    $default  reduce using rule 80 ($@3)

    $@3  go to state 242


State 235

   79 iteration_stat: FOR '(' M ';' exp ';' . exp ')' stat

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    exp               go to state 243
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 236

   78 iteration_stat: FOR '(' exp ';' ';' ')' . $@2 stat

    $default  reduce using rule 77 ($@2)

    $@2  go to state 244


State 237

   76 iteration_stat: FOR '(' exp ';' ';' exp . ')' stat
   92 exp: exp . ',' assignment_exp

    ','  shift, and go to state 97
    ')'  shift, and go to state 245


State 238

   74 iteration_stat: FOR '(' exp ';' exp ';' . exp ')' stat
   75               | FOR '(' exp ';' exp ';' . ')' stat

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20
    ')'          shift, and go to state 246

    exp               go to state 247
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 239

   73 selection_stat: SWITCH '(' exp ')' $@1 stat .

    $default  reduce using rule 73 (selection_stat)


State 240

   85 iteration_stat: FOR '(' ';' ';' ')' $@5 stat .

    $default  reduce using rule 85 (iteration_stat)


State 241

   83 iteration_stat: FOR '(' ';' ';' $@4 exp ')' . stat

    char_const   shift, and go to state 15
    id           shift, and go to state 62
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    FOR          shift, and go to state 63
    BREAK        shift, and go to state 64
    SWITCH       shift, and go to state 65
    CONTINUE     shift, and go to state 66
    RETURN       shift, and go to state 67
    CASE         shift, and go to state 68
    DEFAULT      shift, and go to state 69
    inc_const    shift, and go to state 39
    ';'          shift, and go to state 70
    '{'          shift, and go to state 32
    '('          shift, and go to state 20

    stat              go to state 248
    labeled_stat      go to state 74
    exp_stat          go to state 75
    compound_stat     go to state 76
    selection_stat    go to state 78
    iteration_stat    go to state 79
    jump_stat         go to state 80
    exp               go to state 81
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 242

   81 iteration_stat: FOR '(' ';' exp ';' ')' $@3 . stat

    char_const   shift, and go to state 15
    id           shift, and go to state 62
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    FOR          shift, and go to state 63
    BREAK        shift, and go to state 64
    SWITCH       shift, and go to state 65
    CONTINUE     shift, and go to state 66
    RETURN       shift, and go to state 67
    CASE         shift, and go to state 68
    DEFAULT      shift, and go to state 69
    inc_const    shift, and go to state 39
    ';'          shift, and go to state 70
    '{'          shift, and go to state 32
    '('          shift, and go to state 20

    stat              go to state 249
    labeled_stat      go to state 74
    exp_stat          go to state 75
    compound_stat     go to state 76
    selection_stat    go to state 78
    iteration_stat    go to state 79
    jump_stat         go to state 80
    exp               go to state 81
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 243

   79 iteration_stat: FOR '(' M ';' exp ';' exp . ')' stat
   92 exp: exp . ',' assignment_exp

    ','  shift, and go to state 97
    ')'  shift, and go to state 250


State 244

   78 iteration_stat: FOR '(' exp ';' ';' ')' $@2 . stat

    char_const   shift, and go to state 15
    id           shift, and go to state 62
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    FOR          shift, and go to state 63
    BREAK        shift, and go to state 64
    SWITCH       shift, and go to state 65
    CONTINUE     shift, and go to state 66
    RETURN       shift, and go to state 67
    CASE         shift, and go to state 68
    DEFAULT      shift, and go to state 69
    inc_const    shift, and go to state 39
    ';'          shift, and go to state 70
    '{'          shift, and go to state 32
    '('          shift, and go to state 20

    stat              go to state 251
    labeled_stat      go to state 74
    exp_stat          go to state 75
    compound_stat     go to state 76
    selection_stat    go to state 78
    iteration_stat    go to state 79
    jump_stat         go to state 80
    exp               go to state 81
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 245

   76 iteration_stat: FOR '(' exp ';' ';' exp ')' . stat

    char_const   shift, and go to state 15
    id           shift, and go to state 62
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    FOR          shift, and go to state 63
    BREAK        shift, and go to state 64
    SWITCH       shift, and go to state 65
    CONTINUE     shift, and go to state 66
    RETURN       shift, and go to state 67
    CASE         shift, and go to state 68
    DEFAULT      shift, and go to state 69
    inc_const    shift, and go to state 39
    ';'          shift, and go to state 70
    '{'          shift, and go to state 32
    '('          shift, and go to state 20

    stat              go to state 252
    labeled_stat      go to state 74
    exp_stat          go to state 75
    compound_stat     go to state 76
    selection_stat    go to state 78
    iteration_stat    go to state 79
    jump_stat         go to state 80
    exp               go to state 81
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 246

   75 iteration_stat: FOR '(' exp ';' exp ';' ')' . stat

    char_const   shift, and go to state 15
    id           shift, and go to state 62
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    FOR          shift, and go to state 63
    BREAK        shift, and go to state 64
    SWITCH       shift, and go to state 65
    CONTINUE     shift, and go to state 66
    RETURN       shift, and go to state 67
    CASE         shift, and go to state 68
    DEFAULT      shift, and go to state 69
    inc_const    shift, and go to state 39
    ';'          shift, and go to state 70
    '{'          shift, and go to state 32
    '('          shift, and go to state 20

    stat              go to state 253
    labeled_stat      go to state 74
    exp_stat          go to state 75
    compound_stat     go to state 76
    selection_stat    go to state 78
    iteration_stat    go to state 79
    jump_stat         go to state 80
    exp               go to state 81
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 247

   74 iteration_stat: FOR '(' exp ';' exp ';' exp . ')' stat
   92 exp: exp . ',' assignment_exp

    ','  shift, and go to state 97
    ')'  shift, and go to state 254


State 248

   83 iteration_stat: FOR '(' ';' ';' $@4 exp ')' stat .

    $default  reduce using rule 83 (iteration_stat)


State 249

   81 iteration_stat: FOR '(' ';' exp ';' ')' $@3 stat .

    $default  reduce using rule 81 (iteration_stat)


State 250

   79 iteration_stat: FOR '(' M ';' exp ';' exp ')' . stat

    char_const   shift, and go to state 15
    id           shift, and go to state 62
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    FOR          shift, and go to state 63
    BREAK        shift, and go to state 64
    SWITCH       shift, and go to state 65
    CONTINUE     shift, and go to state 66
    RETURN       shift, and go to state 67
    CASE         shift, and go to state 68
    DEFAULT      shift, and go to state 69
    inc_const    shift, and go to state 39
    ';'          shift, and go to state 70
    '{'          shift, and go to state 32
    '('          shift, and go to state 20

    stat              go to state 255
    labeled_stat      go to state 74
    exp_stat          go to state 75
    compound_stat     go to state 76
    selection_stat    go to state 78
    iteration_stat    go to state 79
    jump_stat         go to state 80
    exp               go to state 81
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 251

   78 iteration_stat: FOR '(' exp ';' ';' ')' $@2 stat .

    $default  reduce using rule 78 (iteration_stat)


State 252

   76 iteration_stat: FOR '(' exp ';' ';' exp ')' stat .

    $default  reduce using rule 76 (iteration_stat)


State 253

   75 iteration_stat: FOR '(' exp ';' exp ';' ')' stat .

    $default  reduce using rule 75 (iteration_stat)


State 254

   74 iteration_stat: FOR '(' exp ';' exp ';' exp ')' . stat

    char_const   shift, and go to state 15
    id           shift, and go to state 62
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    FOR          shift, and go to state 63
    BREAK        shift, and go to state 64
    SWITCH       shift, and go to state 65
    CONTINUE     shift, and go to state 66
    RETURN       shift, and go to state 67
    CASE         shift, and go to state 68
    DEFAULT      shift, and go to state 69
    inc_const    shift, and go to state 39
    ';'          shift, and go to state 70
    '{'          shift, and go to state 32
    '('          shift, and go to state 20

    stat              go to state 256
    labeled_stat      go to state 74
    exp_stat          go to state 75
    compound_stat     go to state 76
    selection_stat    go to state 78
    iteration_stat    go to state 79
    jump_stat         go to state 80
    exp               go to state 81
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 255

   79 iteration_stat: FOR '(' M ';' exp ';' exp ')' stat .

    $default  reduce using rule 79 (iteration_stat)


State 256

   74 iteration_stat: FOR '(' exp ';' exp ';' exp ')' stat .

    $default  reduce using rule 74 (iteration_stat)
