Terminals unused in grammar

   point_const
   ELSE


State 67 conflicts: 1 shift/reduce


Grammar

    0 $accept: program_unit $end

    1 program_unit: HEADER program_unit
    2             | DEFINE primary_exp program_unit
    3             | translation_unit

    4 translation_unit: external_decl
    5                 | translation_unit external_decl

    6 external_decl: function_definition
    7              | decl

    8 function_definition: decl_specs declarator decl_list compound_stat
    9                    | declarator decl_list compound_stat
   10                    | decl_specs declarator compound_stat
   11                    | declarator compound_stat

   12 decl: decl_specs init_declarator_list ';'
   13     | decl_specs ';'

   14 decl_list: decl
   15          | decl_list decl

   16 decl_specs: type_spec decl_specs
   17           | type_spec

   18 type_spec: type_const

   19 init_declarator_list: init_declarator
   20                     | init_declarator_list ',' init_declarator

   21 init_declarator: declarator
   22                | declarator '=' initializer

   23 declarator: direct_declarator

   24 direct_declarator: id
   25                  | '(' declarator ')'
   26                  | direct_declarator '[' const_exp ']'
   27                  | direct_declarator '[' ']'
   28                  | direct_declarator '(' param_type_list ')'
   29                  | direct_declarator '(' id_list ')'
   30                  | direct_declarator '(' ')'

   31 param_type_list: param_list
   32                | param_list ',' param_const

   33 param_list: param_decl
   34           | param_list ','

   35 param_decl: decl_specs declarator
   36           | decl_specs abstract_declarator
   37           | decl_specs

   38 id_list: id
   39        | id_list ',' id

   40 initializer: assignment_exp
   41            | '{' initializer_list '}'
   42            | '{' initializer_list ',' '}'

   43 initializer_list: initializer
   44                 | initializer_list ',' initializer

   45 abstract_declarator: direct_abstract_declarator

   46 direct_abstract_declarator: '(' abstract_declarator ')'
   47                           | direct_abstract_declarator '[' const_exp ']'
   48                           | '[' const_exp ']'
   49                           | direct_abstract_declarator '[' ']'
   50                           | '[' ']'
   51                           | direct_abstract_declarator '(' param_type_list ')'
   52                           | '(' param_type_list ')'
   53                           | direct_abstract_declarator '(' ')'
   54                           | '(' ')'

   55 stat: labeled_stat
   56     | exp_stat
   57     | compound_stat
   58     | selection_stat
   59     | iteration_stat
   60     | jump_stat

   61 labeled_stat: id ':' stat
   62             | CASE const_exp ':' stat
   63             | DEFAULT ':' stat

   64 compound_stat: '{' decl_list stat_list '}'
   65              | '{' stat_list '}'
   66              | '{' decl_list '}'
   67              | '{' '}'

   68 stat_list: stat
   69          | stat_list stat

   70 $@1: %empty

   71 selection_stat: SWITCH '(' exp ')' $@1 stat

   72 $@2: %empty

   73 $@3: %empty

   74 $@4: %empty

   75 iteration_stat: FOR '(' exp_stat $@2 exp_stat $@3 exp $@4 ')' stat

   76 jump_stat: CONTINUE ';'
   77          | BREAK ';'
   78          | RETURN exp ';'
   79          | RETURN ';'

   80 exp_stat: exp ';'

   81 exp: assignment_exp
   82    | exp ',' assignment_exp
   83    | %empty

   84 assignment_exp: conditional_exp

   85 $@5: %empty

   86 $@6: %empty

   87 assignment_exp: unary_exp $@5 '=' $@6 conditional_exp

   88 conditional_exp: logical_or_exp

   89 const_exp: conditional_exp

   90 logical_or_exp: logical_and_exp

   91 $@7: %empty

   92 logical_or_exp: logical_or_exp or_const $@7 logical_and_exp

   93 logical_and_exp: inclusive_or_exp

   94 $@8: %empty

   95 logical_and_exp: logical_and_exp and_const $@8 inclusive_or_exp

   96 inclusive_or_exp: exclusive_or_exp

   97 $@9: %empty

   98 inclusive_or_exp: inclusive_or_exp '|' $@9 exclusive_or_exp

   99 exclusive_or_exp: and_exp

  100 $@10: %empty

  101 exclusive_or_exp: exclusive_or_exp '^' $@10 and_exp

  102 and_exp: equality_exp

  103 $@11: %empty

  104 and_exp: and_exp '&' $@11 equality_exp

  105 equality_exp: relational_exp

  106 $@12: %empty

  107 equality_exp: equality_exp eq_const $@12 relational_exp

  108 relational_exp: additive_exp

  109 $@13: %empty

  110 relational_exp: relational_exp '<' $@13 additive_exp

  111 $@14: %empty

  112 relational_exp: relational_exp '>' $@14 additive_exp

  113 $@15: %empty

  114 relational_exp: relational_exp rel_const $@15 additive_exp

  115 additive_exp: mult_exp

  116 $@16: %empty

  117 additive_exp: additive_exp '+' $@16 mult_exp

  118 $@17: %empty

  119 additive_exp: additive_exp '-' $@17 mult_exp

  120 mult_exp: unary_exp

  121 $@18: %empty

  122 mult_exp: mult_exp '*' $@18 unary_exp

  123 $@19: %empty

  124 mult_exp: mult_exp '/' $@19 unary_exp

  125 $@20: %empty

  126 mult_exp: mult_exp '%' $@20 unary_exp

  127 unary_exp: postfix_exp
  128          | inc_const unary_exp

  129 postfix_exp: primary_exp
  130            | postfix_exp '[' exp ']'
  131            | postfix_exp '(' argument_exp_list ')'
  132            | postfix_exp '(' ')'
  133            | postfix_exp inc_const

  134 primary_exp: id
  135            | consts
  136            | string
  137            | '(' exp ')'

  138 argument_exp_list: assignment_exp
  139                  | argument_exp_list ',' assignment_exp

  140 consts: int_const
  141       | char_const
  142       | float_const


Terminals, with rules where they appear

$end (0) 0
'%' (37) 126
'&' (38) 104
'(' (40) 25 28 29 30 46 51 52 53 54 71 75 131 132 137
')' (41) 25 28 29 30 46 51 52 53 54 71 75 131 132 137
'*' (42) 122
'+' (43) 117
',' (44) 20 32 34 39 42 44 82 139
'-' (45) 119
'/' (47) 124
':' (58) 61 62 63
';' (59) 12 13 76 77 78 79 80
'<' (60) 110
'=' (61) 22 87
'>' (62) 112
'[' (91) 26 27 47 48 49 50 130
']' (93) 26 27 47 48 49 50 130
'^' (94) 101
'{' (123) 41 42 64 65 66 67
'|' (124) 98
'}' (125) 41 42 64 65 66 67
error (256)
char_const (258) 141
id (259) 24 38 39 61 134
string (260) 136
type_const (261) 18
DEFINE (262) 2
int_const (263) 140
float_const (264) 142
FOR (265) 75
BREAK (266) 77
SWITCH (267) 71
CONTINUE (268) 76
RETURN (269) 78 79
CASE (270) 62
DEFAULT (271) 63
or_const (272) 92
and_const (273) 95
eq_const (274) 107
rel_const (275) 114
inc_const (276) 128 133
point_const (277)
param_const (278) 32
ELSE (279)
HEADER (280) 1


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
program_unit (47)
    on left: 1 2 3, on right: 0 1 2
translation_unit (48)
    on left: 4 5, on right: 3 5
external_decl (49)
    on left: 6 7, on right: 4 5
function_definition (50)
    on left: 8 9 10 11, on right: 6
decl (51)
    on left: 12 13, on right: 7 14 15
decl_list (52)
    on left: 14 15, on right: 8 9 15 64 66
decl_specs (53)
    on left: 16 17, on right: 8 10 12 13 16 35 36 37
type_spec (54)
    on left: 18, on right: 16 17
init_declarator_list (55)
    on left: 19 20, on right: 12 20
init_declarator (56)
    on left: 21 22, on right: 19 20
declarator (57)
    on left: 23, on right: 8 9 10 11 21 22 25 35
direct_declarator (58)
    on left: 24 25 26 27 28 29 30, on right: 23 26 27 28 29 30
param_type_list (59)
    on left: 31 32, on right: 28 51 52
param_list (60)
    on left: 33 34, on right: 31 32 34
param_decl (61)
    on left: 35 36 37, on right: 33
id_list (62)
    on left: 38 39, on right: 29 39
initializer (63)
    on left: 40 41 42, on right: 22 43 44
initializer_list (64)
    on left: 43 44, on right: 41 42 44
abstract_declarator (65)
    on left: 45, on right: 36 46
direct_abstract_declarator (66)
    on left: 46 47 48 49 50 51 52 53 54, on right: 45 47 49 51 53
stat (67)
    on left: 55 56 57 58 59 60, on right: 61 62 63 68 69 71 75
labeled_stat (68)
    on left: 61 62 63, on right: 55
compound_stat (69)
    on left: 64 65 66 67, on right: 8 9 10 11 57
stat_list (70)
    on left: 68 69, on right: 64 65 69
selection_stat (71)
    on left: 71, on right: 58
$@1 (72)
    on left: 70, on right: 71
iteration_stat (73)
    on left: 75, on right: 59
$@2 (74)
    on left: 72, on right: 75
$@3 (75)
    on left: 73, on right: 75
$@4 (76)
    on left: 74, on right: 75
jump_stat (77)
    on left: 76 77 78 79, on right: 60
exp_stat (78)
    on left: 80, on right: 56 75
exp (79)
    on left: 81 82 83, on right: 71 75 78 80 82 130 137
assignment_exp (80)
    on left: 84 87, on right: 40 81 82 138 139
$@5 (81)
    on left: 85, on right: 87
$@6 (82)
    on left: 86, on right: 87
conditional_exp (83)
    on left: 88, on right: 84 87 89
const_exp (84)
    on left: 89, on right: 26 47 48 62
logical_or_exp (85)
    on left: 90 92, on right: 88 92
$@7 (86)
    on left: 91, on right: 92
logical_and_exp (87)
    on left: 93 95, on right: 90 92 95
$@8 (88)
    on left: 94, on right: 95
inclusive_or_exp (89)
    on left: 96 98, on right: 93 95 98
$@9 (90)
    on left: 97, on right: 98
exclusive_or_exp (91)
    on left: 99 101, on right: 96 98 101
$@10 (92)
    on left: 100, on right: 101
and_exp (93)
    on left: 102 104, on right: 99 101 104
$@11 (94)
    on left: 103, on right: 104
equality_exp (95)
    on left: 105 107, on right: 102 104 107
$@12 (96)
    on left: 106, on right: 107
relational_exp (97)
    on left: 108 110 112 114, on right: 105 107 110 112 114
$@13 (98)
    on left: 109, on right: 110
$@14 (99)
    on left: 111, on right: 112
$@15 (100)
    on left: 113, on right: 114
additive_exp (101)
    on left: 115 117 119, on right: 108 110 112 114 117 119
$@16 (102)
    on left: 116, on right: 117
$@17 (103)
    on left: 118, on right: 119
mult_exp (104)
    on left: 120 122 124 126, on right: 115 117 119 122 124 126
$@18 (105)
    on left: 121, on right: 122
$@19 (106)
    on left: 123, on right: 124
$@20 (107)
    on left: 125, on right: 126
unary_exp (108)
    on left: 127 128, on right: 87 120 122 124 126 128
postfix_exp (109)
    on left: 129 130 131 132 133, on right: 127 130 131 132 133
primary_exp (110)
    on left: 134 135 136 137, on right: 2 129
argument_exp_list (111)
    on left: 138 139, on right: 131 139
consts (112)
    on left: 140 141 142, on right: 135


State 0

    0 $accept: . program_unit $end

    id          shift, and go to state 1
    type_const  shift, and go to state 2
    DEFINE      shift, and go to state 3
    HEADER      shift, and go to state 4
    '('         shift, and go to state 5

    program_unit         go to state 6
    translation_unit     go to state 7
    external_decl        go to state 8
    function_definition  go to state 9
    decl                 go to state 10
    decl_specs           go to state 11
    type_spec            go to state 12
    declarator           go to state 13
    direct_declarator    go to state 14


State 1

   24 direct_declarator: id .

    $default  reduce using rule 24 (direct_declarator)


State 2

   18 type_spec: type_const .

    $default  reduce using rule 18 (type_spec)


State 3

    2 program_unit: DEFINE . primary_exp program_unit

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    '('          shift, and go to state 20

    primary_exp  go to state 21
    consts       go to state 22


State 4

    1 program_unit: HEADER . program_unit

    id          shift, and go to state 1
    type_const  shift, and go to state 2
    DEFINE      shift, and go to state 3
    HEADER      shift, and go to state 4
    '('         shift, and go to state 5

    program_unit         go to state 23
    translation_unit     go to state 7
    external_decl        go to state 8
    function_definition  go to state 9
    decl                 go to state 10
    decl_specs           go to state 11
    type_spec            go to state 12
    declarator           go to state 13
    direct_declarator    go to state 14


State 5

   25 direct_declarator: '(' . declarator ')'

    id   shift, and go to state 1
    '('  shift, and go to state 5

    declarator         go to state 24
    direct_declarator  go to state 14


State 6

    0 $accept: program_unit . $end

    $end  shift, and go to state 25


State 7

    3 program_unit: translation_unit .
    5 translation_unit: translation_unit . external_decl

    id          shift, and go to state 1
    type_const  shift, and go to state 2
    '('         shift, and go to state 5

    $default  reduce using rule 3 (program_unit)

    external_decl        go to state 26
    function_definition  go to state 9
    decl                 go to state 10
    decl_specs           go to state 11
    type_spec            go to state 12
    declarator           go to state 13
    direct_declarator    go to state 14


State 8

    4 translation_unit: external_decl .

    $default  reduce using rule 4 (translation_unit)


State 9

    6 external_decl: function_definition .

    $default  reduce using rule 6 (external_decl)


State 10

    7 external_decl: decl .

    $default  reduce using rule 7 (external_decl)


State 11

    8 function_definition: decl_specs . declarator decl_list compound_stat
   10                    | decl_specs . declarator compound_stat
   12 decl: decl_specs . init_declarator_list ';'
   13     | decl_specs . ';'

    id   shift, and go to state 1
    ';'  shift, and go to state 27
    '('  shift, and go to state 5

    init_declarator_list  go to state 28
    init_declarator       go to state 29
    declarator            go to state 30
    direct_declarator     go to state 14


State 12

   16 decl_specs: type_spec . decl_specs
   17           | type_spec .

    type_const  shift, and go to state 2

    $default  reduce using rule 17 (decl_specs)

    decl_specs  go to state 31
    type_spec   go to state 12


State 13

    9 function_definition: declarator . decl_list compound_stat
   11                    | declarator . compound_stat

    type_const  shift, and go to state 2
    '{'         shift, and go to state 32

    decl           go to state 33
    decl_list      go to state 34
    decl_specs     go to state 35
    type_spec      go to state 12
    compound_stat  go to state 36


State 14

   23 declarator: direct_declarator .
   26 direct_declarator: direct_declarator . '[' const_exp ']'
   27                  | direct_declarator . '[' ']'
   28                  | direct_declarator . '(' param_type_list ')'
   29                  | direct_declarator . '(' id_list ')'
   30                  | direct_declarator . '(' ')'

    '('  shift, and go to state 37
    '['  shift, and go to state 38

    $default  reduce using rule 23 (declarator)


State 15

  141 consts: char_const .

    $default  reduce using rule 141 (consts)


State 16

  134 primary_exp: id .

    $default  reduce using rule 134 (primary_exp)


State 17

  136 primary_exp: string .

    $default  reduce using rule 136 (primary_exp)


State 18

  140 consts: int_const .

    $default  reduce using rule 140 (consts)


State 19

  142 consts: float_const .

    $default  reduce using rule 142 (consts)


State 20

  137 primary_exp: '(' . exp ')'

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    $default  reduce using rule 83 (exp)

    exp               go to state 40
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 21

    2 program_unit: DEFINE primary_exp . program_unit

    id          shift, and go to state 1
    type_const  shift, and go to state 2
    DEFINE      shift, and go to state 3
    HEADER      shift, and go to state 4
    '('         shift, and go to state 5

    program_unit         go to state 55
    translation_unit     go to state 7
    external_decl        go to state 8
    function_definition  go to state 9
    decl                 go to state 10
    decl_specs           go to state 11
    type_spec            go to state 12
    declarator           go to state 13
    direct_declarator    go to state 14


State 22

  135 primary_exp: consts .

    $default  reduce using rule 135 (primary_exp)


State 23

    1 program_unit: HEADER program_unit .

    $default  reduce using rule 1 (program_unit)


State 24

   25 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 56


State 25

    0 $accept: program_unit $end .

    $default  accept


State 26

    5 translation_unit: translation_unit external_decl .

    $default  reduce using rule 5 (translation_unit)


State 27

   13 decl: decl_specs ';' .

    $default  reduce using rule 13 (decl)


State 28

   12 decl: decl_specs init_declarator_list . ';'
   20 init_declarator_list: init_declarator_list . ',' init_declarator

    ';'  shift, and go to state 57
    ','  shift, and go to state 58


State 29

   19 init_declarator_list: init_declarator .

    $default  reduce using rule 19 (init_declarator_list)


State 30

    8 function_definition: decl_specs declarator . decl_list compound_stat
   10                    | decl_specs declarator . compound_stat
   21 init_declarator: declarator .
   22                | declarator . '=' initializer

    type_const  shift, and go to state 2
    '='         shift, and go to state 59
    '{'         shift, and go to state 32

    $default  reduce using rule 21 (init_declarator)

    decl           go to state 33
    decl_list      go to state 60
    decl_specs     go to state 35
    type_spec      go to state 12
    compound_stat  go to state 61


State 31

   16 decl_specs: type_spec decl_specs .

    $default  reduce using rule 16 (decl_specs)


State 32

   64 compound_stat: '{' . decl_list stat_list '}'
   65              | '{' . stat_list '}'
   66              | '{' . decl_list '}'
   67              | '{' . '}'

    char_const   shift, and go to state 15
    id           shift, and go to state 62
    string       shift, and go to state 17
    type_const   shift, and go to state 2
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    FOR          shift, and go to state 63
    BREAK        shift, and go to state 64
    SWITCH       shift, and go to state 65
    CONTINUE     shift, and go to state 66
    RETURN       shift, and go to state 67
    CASE         shift, and go to state 68
    DEFAULT      shift, and go to state 69
    inc_const    shift, and go to state 39
    '{'          shift, and go to state 32
    '}'          shift, and go to state 70
    '('          shift, and go to state 20

    $default  reduce using rule 83 (exp)

    decl              go to state 33
    decl_list         go to state 71
    decl_specs        go to state 35
    type_spec         go to state 12
    stat              go to state 72
    labeled_stat      go to state 73
    compound_stat     go to state 74
    stat_list         go to state 75
    selection_stat    go to state 76
    iteration_stat    go to state 77
    jump_stat         go to state 78
    exp_stat          go to state 79
    exp               go to state 80
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 33

   14 decl_list: decl .

    $default  reduce using rule 14 (decl_list)


State 34

    9 function_definition: declarator decl_list . compound_stat
   15 decl_list: decl_list . decl

    type_const  shift, and go to state 2
    '{'         shift, and go to state 32

    decl           go to state 81
    decl_specs     go to state 35
    type_spec      go to state 12
    compound_stat  go to state 82


State 35

   12 decl: decl_specs . init_declarator_list ';'
   13     | decl_specs . ';'

    id   shift, and go to state 1
    ';'  shift, and go to state 27
    '('  shift, and go to state 5

    init_declarator_list  go to state 28
    init_declarator       go to state 29
    declarator            go to state 83
    direct_declarator     go to state 14


State 36

   11 function_definition: declarator compound_stat .

    $default  reduce using rule 11 (function_definition)


State 37

   28 direct_declarator: direct_declarator '(' . param_type_list ')'
   29                  | direct_declarator '(' . id_list ')'
   30                  | direct_declarator '(' . ')'

    id          shift, and go to state 84
    type_const  shift, and go to state 2
    ')'         shift, and go to state 85

    decl_specs       go to state 86
    type_spec        go to state 12
    param_type_list  go to state 87
    param_list       go to state 88
    param_decl       go to state 89
    id_list          go to state 90


State 38

   26 direct_declarator: direct_declarator '[' . const_exp ']'
   27                  | direct_declarator '[' . ']'

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20
    ']'          shift, and go to state 91

    conditional_exp   go to state 92
    const_exp         go to state 93
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 94
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 39

  128 unary_exp: inc_const . unary_exp

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    unary_exp    go to state 95
    postfix_exp  go to state 53
    primary_exp  go to state 54
    consts       go to state 22


State 40

   82 exp: exp . ',' assignment_exp
  137 primary_exp: '(' exp . ')'

    ','  shift, and go to state 96
    ')'  shift, and go to state 97


State 41

   81 exp: assignment_exp .

    $default  reduce using rule 81 (exp)


State 42

   84 assignment_exp: conditional_exp .

    $default  reduce using rule 84 (assignment_exp)


State 43

   88 conditional_exp: logical_or_exp .
   92 logical_or_exp: logical_or_exp . or_const $@7 logical_and_exp

    or_const  shift, and go to state 98

    $default  reduce using rule 88 (conditional_exp)


State 44

   90 logical_or_exp: logical_and_exp .
   95 logical_and_exp: logical_and_exp . and_const $@8 inclusive_or_exp

    and_const  shift, and go to state 99

    $default  reduce using rule 90 (logical_or_exp)


State 45

   93 logical_and_exp: inclusive_or_exp .
   98 inclusive_or_exp: inclusive_or_exp . '|' $@9 exclusive_or_exp

    '|'  shift, and go to state 100

    $default  reduce using rule 93 (logical_and_exp)


State 46

   96 inclusive_or_exp: exclusive_or_exp .
  101 exclusive_or_exp: exclusive_or_exp . '^' $@10 and_exp

    '^'  shift, and go to state 101

    $default  reduce using rule 96 (inclusive_or_exp)


State 47

   99 exclusive_or_exp: and_exp .
  104 and_exp: and_exp . '&' $@11 equality_exp

    '&'  shift, and go to state 102

    $default  reduce using rule 99 (exclusive_or_exp)


State 48

  102 and_exp: equality_exp .
  107 equality_exp: equality_exp . eq_const $@12 relational_exp

    eq_const  shift, and go to state 103

    $default  reduce using rule 102 (and_exp)


State 49

  105 equality_exp: relational_exp .
  110 relational_exp: relational_exp . '<' $@13 additive_exp
  112               | relational_exp . '>' $@14 additive_exp
  114               | relational_exp . rel_const $@15 additive_exp

    rel_const  shift, and go to state 104
    '>'        shift, and go to state 105
    '<'        shift, and go to state 106

    $default  reduce using rule 105 (equality_exp)


State 50

  108 relational_exp: additive_exp .
  117 additive_exp: additive_exp . '+' $@16 mult_exp
  119             | additive_exp . '-' $@17 mult_exp

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108

    $default  reduce using rule 108 (relational_exp)


State 51

  115 additive_exp: mult_exp .
  122 mult_exp: mult_exp . '*' $@18 unary_exp
  124         | mult_exp . '/' $@19 unary_exp
  126         | mult_exp . '%' $@20 unary_exp

    '*'  shift, and go to state 109
    '/'  shift, and go to state 110
    '%'  shift, and go to state 111

    $default  reduce using rule 115 (additive_exp)


State 52

   87 assignment_exp: unary_exp . $@5 '=' $@6 conditional_exp
  120 mult_exp: unary_exp .

    '='       reduce using rule 85 ($@5)
    $default  reduce using rule 120 (mult_exp)

    $@5  go to state 112


State 53

  127 unary_exp: postfix_exp .
  130 postfix_exp: postfix_exp . '[' exp ']'
  131            | postfix_exp . '(' argument_exp_list ')'
  132            | postfix_exp . '(' ')'
  133            | postfix_exp . inc_const

    inc_const  shift, and go to state 113
    '('        shift, and go to state 114
    '['        shift, and go to state 115

    $default  reduce using rule 127 (unary_exp)


State 54

  129 postfix_exp: primary_exp .

    $default  reduce using rule 129 (postfix_exp)


State 55

    2 program_unit: DEFINE primary_exp program_unit .

    $default  reduce using rule 2 (program_unit)


State 56

   25 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 25 (direct_declarator)


State 57

   12 decl: decl_specs init_declarator_list ';' .

    $default  reduce using rule 12 (decl)


State 58

   20 init_declarator_list: init_declarator_list ',' . init_declarator

    id   shift, and go to state 1
    '('  shift, and go to state 5

    init_declarator    go to state 116
    declarator         go to state 83
    direct_declarator  go to state 14


State 59

   22 init_declarator: declarator '=' . initializer

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '{'          shift, and go to state 117
    '('          shift, and go to state 20

    initializer       go to state 118
    assignment_exp    go to state 119
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 60

    8 function_definition: decl_specs declarator decl_list . compound_stat
   15 decl_list: decl_list . decl

    type_const  shift, and go to state 2
    '{'         shift, and go to state 32

    decl           go to state 81
    decl_specs     go to state 35
    type_spec      go to state 12
    compound_stat  go to state 120


State 61

   10 function_definition: decl_specs declarator compound_stat .

    $default  reduce using rule 10 (function_definition)


State 62

   61 labeled_stat: id . ':' stat
  134 primary_exp: id .

    ':'  shift, and go to state 121

    $default  reduce using rule 134 (primary_exp)


State 63

   75 iteration_stat: FOR . '(' exp_stat $@2 exp_stat $@3 exp $@4 ')' stat

    '('  shift, and go to state 122


State 64

   77 jump_stat: BREAK . ';'

    ';'  shift, and go to state 123


State 65

   71 selection_stat: SWITCH . '(' exp ')' $@1 stat

    '('  shift, and go to state 124


State 66

   76 jump_stat: CONTINUE . ';'

    ';'  shift, and go to state 125


State 67

   78 jump_stat: RETURN . exp ';'
   79          | RETURN . ';'

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    ';'          shift, and go to state 126
    '('          shift, and go to state 20

    ';'       [reduce using rule 83 (exp)]
    $default  reduce using rule 83 (exp)

    exp               go to state 127
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 68

   62 labeled_stat: CASE . const_exp ':' stat

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    conditional_exp   go to state 92
    const_exp         go to state 128
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 94
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 69

   63 labeled_stat: DEFAULT . ':' stat

    ':'  shift, and go to state 129


State 70

   67 compound_stat: '{' '}' .

    $default  reduce using rule 67 (compound_stat)


State 71

   15 decl_list: decl_list . decl
   64 compound_stat: '{' decl_list . stat_list '}'
   66              | '{' decl_list . '}'

    char_const   shift, and go to state 15
    id           shift, and go to state 62
    string       shift, and go to state 17
    type_const   shift, and go to state 2
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    FOR          shift, and go to state 63
    BREAK        shift, and go to state 64
    SWITCH       shift, and go to state 65
    CONTINUE     shift, and go to state 66
    RETURN       shift, and go to state 67
    CASE         shift, and go to state 68
    DEFAULT      shift, and go to state 69
    inc_const    shift, and go to state 39
    '{'          shift, and go to state 32
    '}'          shift, and go to state 130
    '('          shift, and go to state 20

    $default  reduce using rule 83 (exp)

    decl              go to state 81
    decl_specs        go to state 35
    type_spec         go to state 12
    stat              go to state 72
    labeled_stat      go to state 73
    compound_stat     go to state 74
    stat_list         go to state 131
    selection_stat    go to state 76
    iteration_stat    go to state 77
    jump_stat         go to state 78
    exp_stat          go to state 79
    exp               go to state 80
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 72

   68 stat_list: stat .

    $default  reduce using rule 68 (stat_list)


State 73

   55 stat: labeled_stat .

    $default  reduce using rule 55 (stat)


State 74

   57 stat: compound_stat .

    $default  reduce using rule 57 (stat)


State 75

   65 compound_stat: '{' stat_list . '}'
   69 stat_list: stat_list . stat

    char_const   shift, and go to state 15
    id           shift, and go to state 62
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    FOR          shift, and go to state 63
    BREAK        shift, and go to state 64
    SWITCH       shift, and go to state 65
    CONTINUE     shift, and go to state 66
    RETURN       shift, and go to state 67
    CASE         shift, and go to state 68
    DEFAULT      shift, and go to state 69
    inc_const    shift, and go to state 39
    '{'          shift, and go to state 32
    '}'          shift, and go to state 132
    '('          shift, and go to state 20

    $default  reduce using rule 83 (exp)

    stat              go to state 133
    labeled_stat      go to state 73
    compound_stat     go to state 74
    selection_stat    go to state 76
    iteration_stat    go to state 77
    jump_stat         go to state 78
    exp_stat          go to state 79
    exp               go to state 80
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 76

   58 stat: selection_stat .

    $default  reduce using rule 58 (stat)


State 77

   59 stat: iteration_stat .

    $default  reduce using rule 59 (stat)


State 78

   60 stat: jump_stat .

    $default  reduce using rule 60 (stat)


State 79

   56 stat: exp_stat .

    $default  reduce using rule 56 (stat)


State 80

   80 exp_stat: exp . ';'
   82 exp: exp . ',' assignment_exp

    ';'  shift, and go to state 134
    ','  shift, and go to state 96


State 81

   15 decl_list: decl_list decl .

    $default  reduce using rule 15 (decl_list)


State 82

    9 function_definition: declarator decl_list compound_stat .

    $default  reduce using rule 9 (function_definition)


State 83

   21 init_declarator: declarator .
   22                | declarator . '=' initializer

    '='  shift, and go to state 59

    $default  reduce using rule 21 (init_declarator)


State 84

   38 id_list: id .

    $default  reduce using rule 38 (id_list)


State 85

   30 direct_declarator: direct_declarator '(' ')' .

    $default  reduce using rule 30 (direct_declarator)


State 86

   35 param_decl: decl_specs . declarator
   36           | decl_specs . abstract_declarator
   37           | decl_specs .

    id   shift, and go to state 1
    '('  shift, and go to state 135
    '['  shift, and go to state 136

    $default  reduce using rule 37 (param_decl)

    declarator                  go to state 137
    direct_declarator           go to state 14
    abstract_declarator         go to state 138
    direct_abstract_declarator  go to state 139


State 87

   28 direct_declarator: direct_declarator '(' param_type_list . ')'

    ')'  shift, and go to state 140


State 88

   31 param_type_list: param_list .
   32                | param_list . ',' param_const
   34 param_list: param_list . ','

    ','  shift, and go to state 141

    $default  reduce using rule 31 (param_type_list)


State 89

   33 param_list: param_decl .

    $default  reduce using rule 33 (param_list)


State 90

   29 direct_declarator: direct_declarator '(' id_list . ')'
   39 id_list: id_list . ',' id

    ','  shift, and go to state 142
    ')'  shift, and go to state 143


State 91

   27 direct_declarator: direct_declarator '[' ']' .

    $default  reduce using rule 27 (direct_declarator)


State 92

   89 const_exp: conditional_exp .

    $default  reduce using rule 89 (const_exp)


State 93

   26 direct_declarator: direct_declarator '[' const_exp . ']'

    ']'  shift, and go to state 144


State 94

  120 mult_exp: unary_exp .

    $default  reduce using rule 120 (mult_exp)


State 95

  128 unary_exp: inc_const unary_exp .

    $default  reduce using rule 128 (unary_exp)


State 96

   82 exp: exp ',' . assignment_exp

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    assignment_exp    go to state 145
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 97

  137 primary_exp: '(' exp ')' .

    $default  reduce using rule 137 (primary_exp)


State 98

   92 logical_or_exp: logical_or_exp or_const . $@7 logical_and_exp

    $default  reduce using rule 91 ($@7)

    $@7  go to state 146


State 99

   95 logical_and_exp: logical_and_exp and_const . $@8 inclusive_or_exp

    $default  reduce using rule 94 ($@8)

    $@8  go to state 147


State 100

   98 inclusive_or_exp: inclusive_or_exp '|' . $@9 exclusive_or_exp

    $default  reduce using rule 97 ($@9)

    $@9  go to state 148


State 101

  101 exclusive_or_exp: exclusive_or_exp '^' . $@10 and_exp

    $default  reduce using rule 100 ($@10)

    $@10  go to state 149


State 102

  104 and_exp: and_exp '&' . $@11 equality_exp

    $default  reduce using rule 103 ($@11)

    $@11  go to state 150


State 103

  107 equality_exp: equality_exp eq_const . $@12 relational_exp

    $default  reduce using rule 106 ($@12)

    $@12  go to state 151


State 104

  114 relational_exp: relational_exp rel_const . $@15 additive_exp

    $default  reduce using rule 113 ($@15)

    $@15  go to state 152


State 105

  112 relational_exp: relational_exp '>' . $@14 additive_exp

    $default  reduce using rule 111 ($@14)

    $@14  go to state 153


State 106

  110 relational_exp: relational_exp '<' . $@13 additive_exp

    $default  reduce using rule 109 ($@13)

    $@13  go to state 154


State 107

  117 additive_exp: additive_exp '+' . $@16 mult_exp

    $default  reduce using rule 116 ($@16)

    $@16  go to state 155


State 108

  119 additive_exp: additive_exp '-' . $@17 mult_exp

    $default  reduce using rule 118 ($@17)

    $@17  go to state 156


State 109

  122 mult_exp: mult_exp '*' . $@18 unary_exp

    $default  reduce using rule 121 ($@18)

    $@18  go to state 157


State 110

  124 mult_exp: mult_exp '/' . $@19 unary_exp

    $default  reduce using rule 123 ($@19)

    $@19  go to state 158


State 111

  126 mult_exp: mult_exp '%' . $@20 unary_exp

    $default  reduce using rule 125 ($@20)

    $@20  go to state 159


State 112

   87 assignment_exp: unary_exp $@5 . '=' $@6 conditional_exp

    '='  shift, and go to state 160


State 113

  133 postfix_exp: postfix_exp inc_const .

    $default  reduce using rule 133 (postfix_exp)


State 114

  131 postfix_exp: postfix_exp '(' . argument_exp_list ')'
  132            | postfix_exp '(' . ')'

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20
    ')'          shift, and go to state 161

    assignment_exp     go to state 162
    conditional_exp    go to state 42
    logical_or_exp     go to state 43
    logical_and_exp    go to state 44
    inclusive_or_exp   go to state 45
    exclusive_or_exp   go to state 46
    and_exp            go to state 47
    equality_exp       go to state 48
    relational_exp     go to state 49
    additive_exp       go to state 50
    mult_exp           go to state 51
    unary_exp          go to state 52
    postfix_exp        go to state 53
    primary_exp        go to state 54
    argument_exp_list  go to state 163
    consts             go to state 22


State 115

  130 postfix_exp: postfix_exp '[' . exp ']'

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    $default  reduce using rule 83 (exp)

    exp               go to state 164
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 116

   20 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 20 (init_declarator_list)


State 117

   41 initializer: '{' . initializer_list '}'
   42            | '{' . initializer_list ',' '}'

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '{'          shift, and go to state 117
    '('          shift, and go to state 20

    initializer       go to state 165
    initializer_list  go to state 166
    assignment_exp    go to state 119
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 118

   22 init_declarator: declarator '=' initializer .

    $default  reduce using rule 22 (init_declarator)


State 119

   40 initializer: assignment_exp .

    $default  reduce using rule 40 (initializer)


State 120

    8 function_definition: decl_specs declarator decl_list compound_stat .

    $default  reduce using rule 8 (function_definition)


State 121

   61 labeled_stat: id ':' . stat

    char_const   shift, and go to state 15
    id           shift, and go to state 62
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    FOR          shift, and go to state 63
    BREAK        shift, and go to state 64
    SWITCH       shift, and go to state 65
    CONTINUE     shift, and go to state 66
    RETURN       shift, and go to state 67
    CASE         shift, and go to state 68
    DEFAULT      shift, and go to state 69
    inc_const    shift, and go to state 39
    '{'          shift, and go to state 32
    '('          shift, and go to state 20

    $default  reduce using rule 83 (exp)

    stat              go to state 167
    labeled_stat      go to state 73
    compound_stat     go to state 74
    selection_stat    go to state 76
    iteration_stat    go to state 77
    jump_stat         go to state 78
    exp_stat          go to state 79
    exp               go to state 80
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 122

   75 iteration_stat: FOR '(' . exp_stat $@2 exp_stat $@3 exp $@4 ')' stat

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    $default  reduce using rule 83 (exp)

    exp_stat          go to state 168
    exp               go to state 80
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 123

   77 jump_stat: BREAK ';' .

    $default  reduce using rule 77 (jump_stat)


State 124

   71 selection_stat: SWITCH '(' . exp ')' $@1 stat

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    $default  reduce using rule 83 (exp)

    exp               go to state 169
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 125

   76 jump_stat: CONTINUE ';' .

    $default  reduce using rule 76 (jump_stat)


State 126

   79 jump_stat: RETURN ';' .

    $default  reduce using rule 79 (jump_stat)


State 127

   78 jump_stat: RETURN exp . ';'
   82 exp: exp . ',' assignment_exp

    ';'  shift, and go to state 170
    ','  shift, and go to state 96


State 128

   62 labeled_stat: CASE const_exp . ':' stat

    ':'  shift, and go to state 171


State 129

   63 labeled_stat: DEFAULT ':' . stat

    char_const   shift, and go to state 15
    id           shift, and go to state 62
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    FOR          shift, and go to state 63
    BREAK        shift, and go to state 64
    SWITCH       shift, and go to state 65
    CONTINUE     shift, and go to state 66
    RETURN       shift, and go to state 67
    CASE         shift, and go to state 68
    DEFAULT      shift, and go to state 69
    inc_const    shift, and go to state 39
    '{'          shift, and go to state 32
    '('          shift, and go to state 20

    $default  reduce using rule 83 (exp)

    stat              go to state 172
    labeled_stat      go to state 73
    compound_stat     go to state 74
    selection_stat    go to state 76
    iteration_stat    go to state 77
    jump_stat         go to state 78
    exp_stat          go to state 79
    exp               go to state 80
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 130

   66 compound_stat: '{' decl_list '}' .

    $default  reduce using rule 66 (compound_stat)


State 131

   64 compound_stat: '{' decl_list stat_list . '}'
   69 stat_list: stat_list . stat

    char_const   shift, and go to state 15
    id           shift, and go to state 62
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    FOR          shift, and go to state 63
    BREAK        shift, and go to state 64
    SWITCH       shift, and go to state 65
    CONTINUE     shift, and go to state 66
    RETURN       shift, and go to state 67
    CASE         shift, and go to state 68
    DEFAULT      shift, and go to state 69
    inc_const    shift, and go to state 39
    '{'          shift, and go to state 32
    '}'          shift, and go to state 173
    '('          shift, and go to state 20

    $default  reduce using rule 83 (exp)

    stat              go to state 133
    labeled_stat      go to state 73
    compound_stat     go to state 74
    selection_stat    go to state 76
    iteration_stat    go to state 77
    jump_stat         go to state 78
    exp_stat          go to state 79
    exp               go to state 80
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 132

   65 compound_stat: '{' stat_list '}' .

    $default  reduce using rule 65 (compound_stat)


State 133

   69 stat_list: stat_list stat .

    $default  reduce using rule 69 (stat_list)


State 134

   80 exp_stat: exp ';' .

    $default  reduce using rule 80 (exp_stat)


State 135

   25 direct_declarator: '(' . declarator ')'
   46 direct_abstract_declarator: '(' . abstract_declarator ')'
   52                           | '(' . param_type_list ')'
   54                           | '(' . ')'

    id          shift, and go to state 1
    type_const  shift, and go to state 2
    '('         shift, and go to state 135
    ')'         shift, and go to state 174
    '['         shift, and go to state 136

    decl_specs                  go to state 86
    type_spec                   go to state 12
    declarator                  go to state 24
    direct_declarator           go to state 14
    param_type_list             go to state 175
    param_list                  go to state 88
    param_decl                  go to state 89
    abstract_declarator         go to state 176
    direct_abstract_declarator  go to state 139


State 136

   48 direct_abstract_declarator: '[' . const_exp ']'
   50                           | '[' . ']'

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20
    ']'          shift, and go to state 177

    conditional_exp   go to state 92
    const_exp         go to state 178
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 94
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 137

   35 param_decl: decl_specs declarator .

    $default  reduce using rule 35 (param_decl)


State 138

   36 param_decl: decl_specs abstract_declarator .

    $default  reduce using rule 36 (param_decl)


State 139

   45 abstract_declarator: direct_abstract_declarator .
   47 direct_abstract_declarator: direct_abstract_declarator . '[' const_exp ']'
   49                           | direct_abstract_declarator . '[' ']'
   51                           | direct_abstract_declarator . '(' param_type_list ')'
   53                           | direct_abstract_declarator . '(' ')'

    '('  shift, and go to state 179
    '['  shift, and go to state 180

    $default  reduce using rule 45 (abstract_declarator)


State 140

   28 direct_declarator: direct_declarator '(' param_type_list ')' .

    $default  reduce using rule 28 (direct_declarator)


State 141

   32 param_type_list: param_list ',' . param_const
   34 param_list: param_list ',' .

    param_const  shift, and go to state 181

    $default  reduce using rule 34 (param_list)


State 142

   39 id_list: id_list ',' . id

    id  shift, and go to state 182


State 143

   29 direct_declarator: direct_declarator '(' id_list ')' .

    $default  reduce using rule 29 (direct_declarator)


State 144

   26 direct_declarator: direct_declarator '[' const_exp ']' .

    $default  reduce using rule 26 (direct_declarator)


State 145

   82 exp: exp ',' assignment_exp .

    $default  reduce using rule 82 (exp)


State 146

   92 logical_or_exp: logical_or_exp or_const $@7 . logical_and_exp

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    logical_and_exp   go to state 183
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 94
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 147

   95 logical_and_exp: logical_and_exp and_const $@8 . inclusive_or_exp

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    inclusive_or_exp  go to state 184
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 94
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 148

   98 inclusive_or_exp: inclusive_or_exp '|' $@9 . exclusive_or_exp

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    exclusive_or_exp  go to state 185
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 94
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 149

  101 exclusive_or_exp: exclusive_or_exp '^' $@10 . and_exp

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    and_exp         go to state 186
    equality_exp    go to state 48
    relational_exp  go to state 49
    additive_exp    go to state 50
    mult_exp        go to state 51
    unary_exp       go to state 94
    postfix_exp     go to state 53
    primary_exp     go to state 54
    consts          go to state 22


State 150

  104 and_exp: and_exp '&' $@11 . equality_exp

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    equality_exp    go to state 187
    relational_exp  go to state 49
    additive_exp    go to state 50
    mult_exp        go to state 51
    unary_exp       go to state 94
    postfix_exp     go to state 53
    primary_exp     go to state 54
    consts          go to state 22


State 151

  107 equality_exp: equality_exp eq_const $@12 . relational_exp

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    relational_exp  go to state 188
    additive_exp    go to state 50
    mult_exp        go to state 51
    unary_exp       go to state 94
    postfix_exp     go to state 53
    primary_exp     go to state 54
    consts          go to state 22


State 152

  114 relational_exp: relational_exp rel_const $@15 . additive_exp

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    additive_exp  go to state 189
    mult_exp      go to state 51
    unary_exp     go to state 94
    postfix_exp   go to state 53
    primary_exp   go to state 54
    consts        go to state 22


State 153

  112 relational_exp: relational_exp '>' $@14 . additive_exp

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    additive_exp  go to state 190
    mult_exp      go to state 51
    unary_exp     go to state 94
    postfix_exp   go to state 53
    primary_exp   go to state 54
    consts        go to state 22


State 154

  110 relational_exp: relational_exp '<' $@13 . additive_exp

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    additive_exp  go to state 191
    mult_exp      go to state 51
    unary_exp     go to state 94
    postfix_exp   go to state 53
    primary_exp   go to state 54
    consts        go to state 22


State 155

  117 additive_exp: additive_exp '+' $@16 . mult_exp

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    mult_exp     go to state 192
    unary_exp    go to state 94
    postfix_exp  go to state 53
    primary_exp  go to state 54
    consts       go to state 22


State 156

  119 additive_exp: additive_exp '-' $@17 . mult_exp

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    mult_exp     go to state 193
    unary_exp    go to state 94
    postfix_exp  go to state 53
    primary_exp  go to state 54
    consts       go to state 22


State 157

  122 mult_exp: mult_exp '*' $@18 . unary_exp

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    unary_exp    go to state 194
    postfix_exp  go to state 53
    primary_exp  go to state 54
    consts       go to state 22


State 158

  124 mult_exp: mult_exp '/' $@19 . unary_exp

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    unary_exp    go to state 195
    postfix_exp  go to state 53
    primary_exp  go to state 54
    consts       go to state 22


State 159

  126 mult_exp: mult_exp '%' $@20 . unary_exp

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    unary_exp    go to state 196
    postfix_exp  go to state 53
    primary_exp  go to state 54
    consts       go to state 22


State 160

   87 assignment_exp: unary_exp $@5 '=' . $@6 conditional_exp

    $default  reduce using rule 86 ($@6)

    $@6  go to state 197


State 161

  132 postfix_exp: postfix_exp '(' ')' .

    $default  reduce using rule 132 (postfix_exp)


State 162

  138 argument_exp_list: assignment_exp .

    $default  reduce using rule 138 (argument_exp_list)


State 163

  131 postfix_exp: postfix_exp '(' argument_exp_list . ')'
  139 argument_exp_list: argument_exp_list . ',' assignment_exp

    ','  shift, and go to state 198
    ')'  shift, and go to state 199


State 164

   82 exp: exp . ',' assignment_exp
  130 postfix_exp: postfix_exp '[' exp . ']'

    ','  shift, and go to state 96
    ']'  shift, and go to state 200


State 165

   43 initializer_list: initializer .

    $default  reduce using rule 43 (initializer_list)


State 166

   41 initializer: '{' initializer_list . '}'
   42            | '{' initializer_list . ',' '}'
   44 initializer_list: initializer_list . ',' initializer

    '}'  shift, and go to state 201
    ','  shift, and go to state 202


State 167

   61 labeled_stat: id ':' stat .

    $default  reduce using rule 61 (labeled_stat)


State 168

   75 iteration_stat: FOR '(' exp_stat . $@2 exp_stat $@3 exp $@4 ')' stat

    $default  reduce using rule 72 ($@2)

    $@2  go to state 203


State 169

   71 selection_stat: SWITCH '(' exp . ')' $@1 stat
   82 exp: exp . ',' assignment_exp

    ','  shift, and go to state 96
    ')'  shift, and go to state 204


State 170

   78 jump_stat: RETURN exp ';' .

    $default  reduce using rule 78 (jump_stat)


State 171

   62 labeled_stat: CASE const_exp ':' . stat

    char_const   shift, and go to state 15
    id           shift, and go to state 62
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    FOR          shift, and go to state 63
    BREAK        shift, and go to state 64
    SWITCH       shift, and go to state 65
    CONTINUE     shift, and go to state 66
    RETURN       shift, and go to state 67
    CASE         shift, and go to state 68
    DEFAULT      shift, and go to state 69
    inc_const    shift, and go to state 39
    '{'          shift, and go to state 32
    '('          shift, and go to state 20

    $default  reduce using rule 83 (exp)

    stat              go to state 205
    labeled_stat      go to state 73
    compound_stat     go to state 74
    selection_stat    go to state 76
    iteration_stat    go to state 77
    jump_stat         go to state 78
    exp_stat          go to state 79
    exp               go to state 80
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 172

   63 labeled_stat: DEFAULT ':' stat .

    $default  reduce using rule 63 (labeled_stat)


State 173

   64 compound_stat: '{' decl_list stat_list '}' .

    $default  reduce using rule 64 (compound_stat)


State 174

   54 direct_abstract_declarator: '(' ')' .

    $default  reduce using rule 54 (direct_abstract_declarator)


State 175

   52 direct_abstract_declarator: '(' param_type_list . ')'

    ')'  shift, and go to state 206


State 176

   46 direct_abstract_declarator: '(' abstract_declarator . ')'

    ')'  shift, and go to state 207


State 177

   50 direct_abstract_declarator: '[' ']' .

    $default  reduce using rule 50 (direct_abstract_declarator)


State 178

   48 direct_abstract_declarator: '[' const_exp . ']'

    ']'  shift, and go to state 208


State 179

   51 direct_abstract_declarator: direct_abstract_declarator '(' . param_type_list ')'
   53                           | direct_abstract_declarator '(' . ')'

    type_const  shift, and go to state 2
    ')'         shift, and go to state 209

    decl_specs       go to state 86
    type_spec        go to state 12
    param_type_list  go to state 210
    param_list       go to state 88
    param_decl       go to state 89


State 180

   47 direct_abstract_declarator: direct_abstract_declarator '[' . const_exp ']'
   49                           | direct_abstract_declarator '[' . ']'

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20
    ']'          shift, and go to state 211

    conditional_exp   go to state 92
    const_exp         go to state 212
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 94
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 181

   32 param_type_list: param_list ',' param_const .

    $default  reduce using rule 32 (param_type_list)


State 182

   39 id_list: id_list ',' id .

    $default  reduce using rule 39 (id_list)


State 183

   92 logical_or_exp: logical_or_exp or_const $@7 logical_and_exp .
   95 logical_and_exp: logical_and_exp . and_const $@8 inclusive_or_exp

    and_const  shift, and go to state 99

    $default  reduce using rule 92 (logical_or_exp)


State 184

   95 logical_and_exp: logical_and_exp and_const $@8 inclusive_or_exp .
   98 inclusive_or_exp: inclusive_or_exp . '|' $@9 exclusive_or_exp

    '|'  shift, and go to state 100

    $default  reduce using rule 95 (logical_and_exp)


State 185

   98 inclusive_or_exp: inclusive_or_exp '|' $@9 exclusive_or_exp .
  101 exclusive_or_exp: exclusive_or_exp . '^' $@10 and_exp

    '^'  shift, and go to state 101

    $default  reduce using rule 98 (inclusive_or_exp)


State 186

  101 exclusive_or_exp: exclusive_or_exp '^' $@10 and_exp .
  104 and_exp: and_exp . '&' $@11 equality_exp

    '&'  shift, and go to state 102

    $default  reduce using rule 101 (exclusive_or_exp)


State 187

  104 and_exp: and_exp '&' $@11 equality_exp .
  107 equality_exp: equality_exp . eq_const $@12 relational_exp

    eq_const  shift, and go to state 103

    $default  reduce using rule 104 (and_exp)


State 188

  107 equality_exp: equality_exp eq_const $@12 relational_exp .
  110 relational_exp: relational_exp . '<' $@13 additive_exp
  112               | relational_exp . '>' $@14 additive_exp
  114               | relational_exp . rel_const $@15 additive_exp

    rel_const  shift, and go to state 104
    '>'        shift, and go to state 105
    '<'        shift, and go to state 106

    $default  reduce using rule 107 (equality_exp)


State 189

  114 relational_exp: relational_exp rel_const $@15 additive_exp .
  117 additive_exp: additive_exp . '+' $@16 mult_exp
  119             | additive_exp . '-' $@17 mult_exp

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108

    $default  reduce using rule 114 (relational_exp)


State 190

  112 relational_exp: relational_exp '>' $@14 additive_exp .
  117 additive_exp: additive_exp . '+' $@16 mult_exp
  119             | additive_exp . '-' $@17 mult_exp

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108

    $default  reduce using rule 112 (relational_exp)


State 191

  110 relational_exp: relational_exp '<' $@13 additive_exp .
  117 additive_exp: additive_exp . '+' $@16 mult_exp
  119             | additive_exp . '-' $@17 mult_exp

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108

    $default  reduce using rule 110 (relational_exp)


State 192

  117 additive_exp: additive_exp '+' $@16 mult_exp .
  122 mult_exp: mult_exp . '*' $@18 unary_exp
  124         | mult_exp . '/' $@19 unary_exp
  126         | mult_exp . '%' $@20 unary_exp

    '*'  shift, and go to state 109
    '/'  shift, and go to state 110
    '%'  shift, and go to state 111

    $default  reduce using rule 117 (additive_exp)


State 193

  119 additive_exp: additive_exp '-' $@17 mult_exp .
  122 mult_exp: mult_exp . '*' $@18 unary_exp
  124         | mult_exp . '/' $@19 unary_exp
  126         | mult_exp . '%' $@20 unary_exp

    '*'  shift, and go to state 109
    '/'  shift, and go to state 110
    '%'  shift, and go to state 111

    $default  reduce using rule 119 (additive_exp)


State 194

  122 mult_exp: mult_exp '*' $@18 unary_exp .

    $default  reduce using rule 122 (mult_exp)


State 195

  124 mult_exp: mult_exp '/' $@19 unary_exp .

    $default  reduce using rule 124 (mult_exp)


State 196

  126 mult_exp: mult_exp '%' $@20 unary_exp .

    $default  reduce using rule 126 (mult_exp)


State 197

   87 assignment_exp: unary_exp $@5 '=' $@6 . conditional_exp

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    conditional_exp   go to state 213
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 94
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 198

  139 argument_exp_list: argument_exp_list ',' . assignment_exp

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    assignment_exp    go to state 214
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 199

  131 postfix_exp: postfix_exp '(' argument_exp_list ')' .

    $default  reduce using rule 131 (postfix_exp)


State 200

  130 postfix_exp: postfix_exp '[' exp ']' .

    $default  reduce using rule 130 (postfix_exp)


State 201

   41 initializer: '{' initializer_list '}' .

    $default  reduce using rule 41 (initializer)


State 202

   42 initializer: '{' initializer_list ',' . '}'
   44 initializer_list: initializer_list ',' . initializer

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '{'          shift, and go to state 117
    '}'          shift, and go to state 215
    '('          shift, and go to state 20

    initializer       go to state 216
    assignment_exp    go to state 119
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 203

   75 iteration_stat: FOR '(' exp_stat $@2 . exp_stat $@3 exp $@4 ')' stat

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    $default  reduce using rule 83 (exp)

    exp_stat          go to state 217
    exp               go to state 80
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 204

   71 selection_stat: SWITCH '(' exp ')' . $@1 stat

    $default  reduce using rule 70 ($@1)

    $@1  go to state 218


State 205

   62 labeled_stat: CASE const_exp ':' stat .

    $default  reduce using rule 62 (labeled_stat)


State 206

   52 direct_abstract_declarator: '(' param_type_list ')' .

    $default  reduce using rule 52 (direct_abstract_declarator)


State 207

   46 direct_abstract_declarator: '(' abstract_declarator ')' .

    $default  reduce using rule 46 (direct_abstract_declarator)


State 208

   48 direct_abstract_declarator: '[' const_exp ']' .

    $default  reduce using rule 48 (direct_abstract_declarator)


State 209

   53 direct_abstract_declarator: direct_abstract_declarator '(' ')' .

    $default  reduce using rule 53 (direct_abstract_declarator)


State 210

   51 direct_abstract_declarator: direct_abstract_declarator '(' param_type_list . ')'

    ')'  shift, and go to state 219


State 211

   49 direct_abstract_declarator: direct_abstract_declarator '[' ']' .

    $default  reduce using rule 49 (direct_abstract_declarator)


State 212

   47 direct_abstract_declarator: direct_abstract_declarator '[' const_exp . ']'

    ']'  shift, and go to state 220


State 213

   87 assignment_exp: unary_exp $@5 '=' $@6 conditional_exp .

    $default  reduce using rule 87 (assignment_exp)


State 214

  139 argument_exp_list: argument_exp_list ',' assignment_exp .

    $default  reduce using rule 139 (argument_exp_list)


State 215

   42 initializer: '{' initializer_list ',' '}' .

    $default  reduce using rule 42 (initializer)


State 216

   44 initializer_list: initializer_list ',' initializer .

    $default  reduce using rule 44 (initializer_list)


State 217

   75 iteration_stat: FOR '(' exp_stat $@2 exp_stat . $@3 exp $@4 ')' stat

    $default  reduce using rule 73 ($@3)

    $@3  go to state 221


State 218

   71 selection_stat: SWITCH '(' exp ')' $@1 . stat

    char_const   shift, and go to state 15
    id           shift, and go to state 62
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    FOR          shift, and go to state 63
    BREAK        shift, and go to state 64
    SWITCH       shift, and go to state 65
    CONTINUE     shift, and go to state 66
    RETURN       shift, and go to state 67
    CASE         shift, and go to state 68
    DEFAULT      shift, and go to state 69
    inc_const    shift, and go to state 39
    '{'          shift, and go to state 32
    '('          shift, and go to state 20

    $default  reduce using rule 83 (exp)

    stat              go to state 222
    labeled_stat      go to state 73
    compound_stat     go to state 74
    selection_stat    go to state 76
    iteration_stat    go to state 77
    jump_stat         go to state 78
    exp_stat          go to state 79
    exp               go to state 80
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 219

   51 direct_abstract_declarator: direct_abstract_declarator '(' param_type_list ')' .

    $default  reduce using rule 51 (direct_abstract_declarator)


State 220

   47 direct_abstract_declarator: direct_abstract_declarator '[' const_exp ']' .

    $default  reduce using rule 47 (direct_abstract_declarator)


State 221

   75 iteration_stat: FOR '(' exp_stat $@2 exp_stat $@3 . exp $@4 ')' stat

    char_const   shift, and go to state 15
    id           shift, and go to state 16
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    inc_const    shift, and go to state 39
    '('          shift, and go to state 20

    $default  reduce using rule 83 (exp)

    exp               go to state 223
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 222

   71 selection_stat: SWITCH '(' exp ')' $@1 stat .

    $default  reduce using rule 71 (selection_stat)


State 223

   75 iteration_stat: FOR '(' exp_stat $@2 exp_stat $@3 exp . $@4 ')' stat
   82 exp: exp . ',' assignment_exp

    ','  shift, and go to state 96

    $default  reduce using rule 74 ($@4)

    $@4  go to state 224


State 224

   75 iteration_stat: FOR '(' exp_stat $@2 exp_stat $@3 exp $@4 . ')' stat

    ')'  shift, and go to state 225


State 225

   75 iteration_stat: FOR '(' exp_stat $@2 exp_stat $@3 exp $@4 ')' . stat

    char_const   shift, and go to state 15
    id           shift, and go to state 62
    string       shift, and go to state 17
    int_const    shift, and go to state 18
    float_const  shift, and go to state 19
    FOR          shift, and go to state 63
    BREAK        shift, and go to state 64
    SWITCH       shift, and go to state 65
    CONTINUE     shift, and go to state 66
    RETURN       shift, and go to state 67
    CASE         shift, and go to state 68
    DEFAULT      shift, and go to state 69
    inc_const    shift, and go to state 39
    '{'          shift, and go to state 32
    '('          shift, and go to state 20

    $default  reduce using rule 83 (exp)

    stat              go to state 226
    labeled_stat      go to state 73
    compound_stat     go to state 74
    selection_stat    go to state 76
    iteration_stat    go to state 77
    jump_stat         go to state 78
    exp_stat          go to state 79
    exp               go to state 80
    assignment_exp    go to state 41
    conditional_exp   go to state 42
    logical_or_exp    go to state 43
    logical_and_exp   go to state 44
    inclusive_or_exp  go to state 45
    exclusive_or_exp  go to state 46
    and_exp           go to state 47
    equality_exp      go to state 48
    relational_exp    go to state 49
    additive_exp      go to state 50
    mult_exp          go to state 51
    unary_exp         go to state 52
    postfix_exp       go to state 53
    primary_exp       go to state 54
    consts            go to state 22


State 226

   75 iteration_stat: FOR '(' exp_stat $@2 exp_stat $@3 exp $@4 ')' stat .

    $default  reduce using rule 75 (iteration_stat)
