Grammar

    0 $accept: program $end

    1 program: function

    2 function: function stmt
    3         | %empty

    4 stmt: ';'
    5     | expr ';'
    6     | PRINT expr ';'
    7     | VARIABLE '=' expr ';'
    8     | WHILE '(' expr ')' stmt
    9     | FOR '(' stmt stmt expr ')' stmt
   10     | IF '(' expr ')' stmt
   11     | IF '(' expr ')' stmt ELSE stmt
   12     | '{' stmt_list '}'

   13 stmt_list: stmt
   14          | stmt_list stmt

   15 expr: INTEGER
   16     | VARIABLE
   17     | '-' expr
   18     | expr INC
   19     | expr DEC
   20     | expr '+' expr
   21     | expr '-' expr
   22     | expr '*' expr
   23     | expr '/' expr
   24     | expr '<' expr
   25     | expr '>' expr
   26     | expr GE expr
   27     | expr LE expr
   28     | expr NE expr
   29     | expr EQ expr
   30     | '(' expr ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 8 9 10 11 30
')' (41) 8 9 10 11 30
'*' (42) 22
'+' (43) 20
'-' (45) 17 21
'/' (47) 23
';' (59) 4 5 6 7
'<' (60) 24
'=' (61) 7
'>' (62) 25
'{' (123) 12
'}' (125) 12
error (256)
INTEGER (258) 15
VARIABLE (259) 7 16
WHILE (260) 8
IF (261) 10 11
PRINT (262) 6
FOR (263) 9
IFX (264)
ELSE (265) 11
GE (266) 26
LE (267) 27
EQ (268) 29
NE (269) 28
UMINUS (270)
INC (271) 18
DEC (272) 19


Nonterminals, with rules where they appear

$accept (30)
    on left: 0
program (31)
    on left: 1, on right: 0
function (32)
    on left: 2 3, on right: 1 2
stmt (33)
    on left: 4 5 6 7 8 9 10 11 12, on right: 2 8 9 10 11 13 14
stmt_list (34)
    on left: 13 14, on right: 12 14
expr (35)
    on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30, on right:
    5 6 7 8 9 10 11 17 18 19 20 21 22 23 24 25 26 27 28 29 30


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (function)

    program   go to state 1
    function  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: function .
    2 function: function . stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 5
    WHILE     shift, and go to state 6
    IF        shift, and go to state 7
    PRINT     shift, and go to state 8
    FOR       shift, and go to state 9
    '-'       shift, and go to state 10
    ';'       shift, and go to state 11
    '('       shift, and go to state 12
    '{'       shift, and go to state 13

    $default  reduce using rule 1 (program)

    stmt  go to state 14
    expr  go to state 15


State 3

    0 $accept: program $end .

    $default  accept


State 4

   15 expr: INTEGER .

    $default  reduce using rule 15 (expr)


State 5

    7 stmt: VARIABLE . '=' expr ';'
   16 expr: VARIABLE .

    '='  shift, and go to state 16

    $default  reduce using rule 16 (expr)


State 6

    8 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 17


State 7

   10 stmt: IF . '(' expr ')' stmt
   11     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 18


State 8

    6 stmt: PRINT . expr ';'

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '-'       shift, and go to state 10
    '('       shift, and go to state 12

    expr  go to state 20


State 9

    9 stmt: FOR . '(' stmt stmt expr ')' stmt

    '('  shift, and go to state 21


State 10

   17 expr: '-' . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '-'       shift, and go to state 10
    '('       shift, and go to state 12

    expr  go to state 22


State 11

    4 stmt: ';' .

    $default  reduce using rule 4 (stmt)


State 12

   30 expr: '(' . expr ')'

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '-'       shift, and go to state 10
    '('       shift, and go to state 12

    expr  go to state 23


State 13

   12 stmt: '{' . stmt_list '}'

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 5
    WHILE     shift, and go to state 6
    IF        shift, and go to state 7
    PRINT     shift, and go to state 8
    FOR       shift, and go to state 9
    '-'       shift, and go to state 10
    ';'       shift, and go to state 11
    '('       shift, and go to state 12
    '{'       shift, and go to state 13

    stmt       go to state 24
    stmt_list  go to state 25
    expr       go to state 15


State 14

    2 function: function stmt .

    $default  reduce using rule 2 (function)


State 15

    5 stmt: expr . ';'
   18 expr: expr . INC
   19     | expr . DEC
   20     | expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr

    GE   shift, and go to state 26
    LE   shift, and go to state 27
    EQ   shift, and go to state 28
    NE   shift, and go to state 29
    '>'  shift, and go to state 30
    '<'  shift, and go to state 31
    '+'  shift, and go to state 32
    '-'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35
    INC  shift, and go to state 36
    DEC  shift, and go to state 37
    ';'  shift, and go to state 38


State 16

    7 stmt: VARIABLE '=' . expr ';'

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '-'       shift, and go to state 10
    '('       shift, and go to state 12

    expr  go to state 39


State 17

    8 stmt: WHILE '(' . expr ')' stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '-'       shift, and go to state 10
    '('       shift, and go to state 12

    expr  go to state 40


State 18

   10 stmt: IF '(' . expr ')' stmt
   11     | IF '(' . expr ')' stmt ELSE stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '-'       shift, and go to state 10
    '('       shift, and go to state 12

    expr  go to state 41


State 19

   16 expr: VARIABLE .

    $default  reduce using rule 16 (expr)


State 20

    6 stmt: PRINT expr . ';'
   18 expr: expr . INC
   19     | expr . DEC
   20     | expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr

    GE   shift, and go to state 26
    LE   shift, and go to state 27
    EQ   shift, and go to state 28
    NE   shift, and go to state 29
    '>'  shift, and go to state 30
    '<'  shift, and go to state 31
    '+'  shift, and go to state 32
    '-'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35
    INC  shift, and go to state 36
    DEC  shift, and go to state 37
    ';'  shift, and go to state 42


State 21

    9 stmt: FOR '(' . stmt stmt expr ')' stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 5
    WHILE     shift, and go to state 6
    IF        shift, and go to state 7
    PRINT     shift, and go to state 8
    FOR       shift, and go to state 9
    '-'       shift, and go to state 10
    ';'       shift, and go to state 11
    '('       shift, and go to state 12
    '{'       shift, and go to state 13

    stmt  go to state 43
    expr  go to state 15


State 22

   17 expr: '-' expr .
   18     | expr . INC
   19     | expr . DEC
   20     | expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr

    INC  error (nonassociative)
    DEC  error (nonassociative)

    $default  reduce using rule 17 (expr)


State 23

   18 expr: expr . INC
   19     | expr . DEC
   20     | expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr
   30     | '(' expr . ')'

    GE   shift, and go to state 26
    LE   shift, and go to state 27
    EQ   shift, and go to state 28
    NE   shift, and go to state 29
    '>'  shift, and go to state 30
    '<'  shift, and go to state 31
    '+'  shift, and go to state 32
    '-'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35
    INC  shift, and go to state 36
    DEC  shift, and go to state 37
    ')'  shift, and go to state 44


State 24

   13 stmt_list: stmt .

    $default  reduce using rule 13 (stmt_list)


State 25

   12 stmt: '{' stmt_list . '}'
   14 stmt_list: stmt_list . stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 5
    WHILE     shift, and go to state 6
    IF        shift, and go to state 7
    PRINT     shift, and go to state 8
    FOR       shift, and go to state 9
    '-'       shift, and go to state 10
    ';'       shift, and go to state 11
    '('       shift, and go to state 12
    '{'       shift, and go to state 13
    '}'       shift, and go to state 45

    stmt  go to state 46
    expr  go to state 15


State 26

   26 expr: expr GE . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '-'       shift, and go to state 10
    '('       shift, and go to state 12

    expr  go to state 47


State 27

   27 expr: expr LE . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '-'       shift, and go to state 10
    '('       shift, and go to state 12

    expr  go to state 48


State 28

   29 expr: expr EQ . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '-'       shift, and go to state 10
    '('       shift, and go to state 12

    expr  go to state 49


State 29

   28 expr: expr NE . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '-'       shift, and go to state 10
    '('       shift, and go to state 12

    expr  go to state 50


State 30

   25 expr: expr '>' . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '-'       shift, and go to state 10
    '('       shift, and go to state 12

    expr  go to state 51


State 31

   24 expr: expr '<' . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '-'       shift, and go to state 10
    '('       shift, and go to state 12

    expr  go to state 52


State 32

   20 expr: expr '+' . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '-'       shift, and go to state 10
    '('       shift, and go to state 12

    expr  go to state 53


State 33

   21 expr: expr '-' . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '-'       shift, and go to state 10
    '('       shift, and go to state 12

    expr  go to state 54


State 34

   22 expr: expr '*' . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '-'       shift, and go to state 10
    '('       shift, and go to state 12

    expr  go to state 55


State 35

   23 expr: expr '/' . expr

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '-'       shift, and go to state 10
    '('       shift, and go to state 12

    expr  go to state 56


State 36

   18 expr: expr INC .

    $default  reduce using rule 18 (expr)


State 37

   19 expr: expr DEC .

    $default  reduce using rule 19 (expr)


State 38

    5 stmt: expr ';' .

    $default  reduce using rule 5 (stmt)


State 39

    7 stmt: VARIABLE '=' expr . ';'
   18 expr: expr . INC
   19     | expr . DEC
   20     | expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr

    GE   shift, and go to state 26
    LE   shift, and go to state 27
    EQ   shift, and go to state 28
    NE   shift, and go to state 29
    '>'  shift, and go to state 30
    '<'  shift, and go to state 31
    '+'  shift, and go to state 32
    '-'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35
    INC  shift, and go to state 36
    DEC  shift, and go to state 37
    ';'  shift, and go to state 57


State 40

    8 stmt: WHILE '(' expr . ')' stmt
   18 expr: expr . INC
   19     | expr . DEC
   20     | expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr

    GE   shift, and go to state 26
    LE   shift, and go to state 27
    EQ   shift, and go to state 28
    NE   shift, and go to state 29
    '>'  shift, and go to state 30
    '<'  shift, and go to state 31
    '+'  shift, and go to state 32
    '-'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35
    INC  shift, and go to state 36
    DEC  shift, and go to state 37
    ')'  shift, and go to state 58


State 41

   10 stmt: IF '(' expr . ')' stmt
   11     | IF '(' expr . ')' stmt ELSE stmt
   18 expr: expr . INC
   19     | expr . DEC
   20     | expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr

    GE   shift, and go to state 26
    LE   shift, and go to state 27
    EQ   shift, and go to state 28
    NE   shift, and go to state 29
    '>'  shift, and go to state 30
    '<'  shift, and go to state 31
    '+'  shift, and go to state 32
    '-'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35
    INC  shift, and go to state 36
    DEC  shift, and go to state 37
    ')'  shift, and go to state 59


State 42

    6 stmt: PRINT expr ';' .

    $default  reduce using rule 6 (stmt)


State 43

    9 stmt: FOR '(' stmt . stmt expr ')' stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 5
    WHILE     shift, and go to state 6
    IF        shift, and go to state 7
    PRINT     shift, and go to state 8
    FOR       shift, and go to state 9
    '-'       shift, and go to state 10
    ';'       shift, and go to state 11
    '('       shift, and go to state 12
    '{'       shift, and go to state 13

    stmt  go to state 60
    expr  go to state 15


State 44

   30 expr: '(' expr ')' .

    $default  reduce using rule 30 (expr)


State 45

   12 stmt: '{' stmt_list '}' .

    $default  reduce using rule 12 (stmt)


State 46

   14 stmt_list: stmt_list stmt .

    $default  reduce using rule 14 (stmt_list)


State 47

   18 expr: expr . INC
   19     | expr . DEC
   20     | expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   26     | expr GE expr .
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr

    '+'  shift, and go to state 32
    '-'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35
    INC  shift, and go to state 36
    DEC  shift, and go to state 37

    $default  reduce using rule 26 (expr)


State 48

   18 expr: expr . INC
   19     | expr . DEC
   20     | expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   27     | expr LE expr .
   28     | expr . NE expr
   29     | expr . EQ expr

    '+'  shift, and go to state 32
    '-'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35
    INC  shift, and go to state 36
    DEC  shift, and go to state 37

    $default  reduce using rule 27 (expr)


State 49

   18 expr: expr . INC
   19     | expr . DEC
   20     | expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr
   29     | expr EQ expr .

    '+'  shift, and go to state 32
    '-'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35
    INC  shift, and go to state 36
    DEC  shift, and go to state 37

    $default  reduce using rule 29 (expr)


State 50

   18 expr: expr . INC
   19     | expr . DEC
   20     | expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   28     | expr NE expr .
   29     | expr . EQ expr

    '+'  shift, and go to state 32
    '-'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35
    INC  shift, and go to state 36
    DEC  shift, and go to state 37

    $default  reduce using rule 28 (expr)


State 51

   18 expr: expr . INC
   19     | expr . DEC
   20     | expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   25     | expr '>' expr .
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr

    '+'  shift, and go to state 32
    '-'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35
    INC  shift, and go to state 36
    DEC  shift, and go to state 37

    $default  reduce using rule 25 (expr)


State 52

   18 expr: expr . INC
   19     | expr . DEC
   20     | expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   24     | expr '<' expr .
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr

    '+'  shift, and go to state 32
    '-'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35
    INC  shift, and go to state 36
    DEC  shift, and go to state 37

    $default  reduce using rule 24 (expr)


State 53

   18 expr: expr . INC
   19     | expr . DEC
   20     | expr . '+' expr
   20     | expr '+' expr .
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr

    '*'  shift, and go to state 34
    '/'  shift, and go to state 35
    INC  shift, and go to state 36
    DEC  shift, and go to state 37

    $default  reduce using rule 20 (expr)


State 54

   18 expr: expr . INC
   19     | expr . DEC
   20     | expr . '+' expr
   21     | expr . '-' expr
   21     | expr '-' expr .
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr

    '*'  shift, and go to state 34
    '/'  shift, and go to state 35
    INC  shift, and go to state 36
    DEC  shift, and go to state 37

    $default  reduce using rule 21 (expr)


State 55

   18 expr: expr . INC
   19     | expr . DEC
   20     | expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   22     | expr '*' expr .
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr

    INC  shift, and go to state 36
    DEC  shift, and go to state 37

    $default  reduce using rule 22 (expr)


State 56

   18 expr: expr . INC
   19     | expr . DEC
   20     | expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   23     | expr '/' expr .
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr

    INC  shift, and go to state 36
    DEC  shift, and go to state 37

    $default  reduce using rule 23 (expr)


State 57

    7 stmt: VARIABLE '=' expr ';' .

    $default  reduce using rule 7 (stmt)


State 58

    8 stmt: WHILE '(' expr ')' . stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 5
    WHILE     shift, and go to state 6
    IF        shift, and go to state 7
    PRINT     shift, and go to state 8
    FOR       shift, and go to state 9
    '-'       shift, and go to state 10
    ';'       shift, and go to state 11
    '('       shift, and go to state 12
    '{'       shift, and go to state 13

    stmt  go to state 61
    expr  go to state 15


State 59

   10 stmt: IF '(' expr ')' . stmt
   11     | IF '(' expr ')' . stmt ELSE stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 5
    WHILE     shift, and go to state 6
    IF        shift, and go to state 7
    PRINT     shift, and go to state 8
    FOR       shift, and go to state 9
    '-'       shift, and go to state 10
    ';'       shift, and go to state 11
    '('       shift, and go to state 12
    '{'       shift, and go to state 13

    stmt  go to state 62
    expr  go to state 15


State 60

    9 stmt: FOR '(' stmt stmt . expr ')' stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 19
    '-'       shift, and go to state 10
    '('       shift, and go to state 12

    expr  go to state 63


State 61

    8 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 8 (stmt)


State 62

   10 stmt: IF '(' expr ')' stmt .
   11     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 64

    $default  reduce using rule 10 (stmt)


State 63

    9 stmt: FOR '(' stmt stmt expr . ')' stmt
   18 expr: expr . INC
   19     | expr . DEC
   20     | expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . '<' expr
   25     | expr . '>' expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . NE expr
   29     | expr . EQ expr

    GE   shift, and go to state 26
    LE   shift, and go to state 27
    EQ   shift, and go to state 28
    NE   shift, and go to state 29
    '>'  shift, and go to state 30
    '<'  shift, and go to state 31
    '+'  shift, and go to state 32
    '-'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35
    INC  shift, and go to state 36
    DEC  shift, and go to state 37
    ')'  shift, and go to state 65


State 64

   11 stmt: IF '(' expr ')' stmt ELSE . stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 5
    WHILE     shift, and go to state 6
    IF        shift, and go to state 7
    PRINT     shift, and go to state 8
    FOR       shift, and go to state 9
    '-'       shift, and go to state 10
    ';'       shift, and go to state 11
    '('       shift, and go to state 12
    '{'       shift, and go to state 13

    stmt  go to state 66
    expr  go to state 15


State 65

    9 stmt: FOR '(' stmt stmt expr ')' . stmt

    INTEGER   shift, and go to state 4
    VARIABLE  shift, and go to state 5
    WHILE     shift, and go to state 6
    IF        shift, and go to state 7
    PRINT     shift, and go to state 8
    FOR       shift, and go to state 9
    '-'       shift, and go to state 10
    ';'       shift, and go to state 11
    '('       shift, and go to state 12
    '{'       shift, and go to state 13

    stmt  go to state 67
    expr  go to state 15


State 66

   11 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 11 (stmt)


State 67

    9 stmt: FOR '(' stmt stmt expr ')' stmt .

    $default  reduce using rule 9 (stmt)
